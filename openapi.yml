openapi: 3.1.0
info:
  title: Deepgram API Specification
  version: 1.0.0
  description: |
    Deepgram's voice AI platform provides APIs for speech-to-text, text-to-speech, and language understanding. From medical transcription to autonomous agents, Deepgram is the go-to choice for developers of voice AI experiences.
    The Deepgram API allows you to interact with Deepgram programmatically.
    You can use our API to: - Transcribe speech to text. - Transform text to speech. - Analyze text. - Administer your Deepgram account.
  termsOfService: https://deepgram.com/terms/
  contact:
    email: devrel@deepgram.com
    url: https://community.deepgram.com
    name: Deepgram Developer Relations
  license:
    name: Privacy Notice
    url: https://deepgram.com/privacy/
servers:
  - url: https://api.deepgram.com
    description: Deepgram Production API
security:
  - ApiKeyAuth: []
tags:
  - name: Speech to Text
    description: Power your apps with world-class speech recognition
  - name: Audio Intelligence
    description: Analyze audio sources
  - name: Text Intelligence
    description: Analyze the content of text sources
  - name: Text to Speech
    description: Transform text to speech
  - name: Management API
    description: Manage your projects
externalDocs:
  description: Learn more about using Deepgram on our docs.
  url: http://developers.deepgram.com
paths:
  /v1/listen:
    summary: Transcribe and analyze pre-recorded audio
    description: Use Deepgram's speech-to-text API to transcribe and analyze pre-recorded audio
    post:
      tags:
        - Speech to Text
      security:
        - ApiKeyAuth: []
      description: Transcribe audio using Deepgram's speech-to-text API
      operationId: listen
      requestBody:
        description: Transcribe an audio file
        content:
          application/json:
            schema:
              required:
                - url
              type: object
              description: Audio file to transcribe
              properties:
                url:
                  type: string
                  format: uri
                  example: https://dpgr.am/spacewalk.wav
            example:
              url: https://dpgr.am/spacewalk.wav
          file:
            schema:
              type: string
              format: binary
        required: true
      parameters:
        - $ref: '#/components/parameters/callback'
        - $ref: '#/components/parameters/callback_method'
        - $ref: '#/components/parameters/custom_topic'
        - $ref: '#/components/parameters/custom_topic_mode'
        - $ref: '#/components/parameters/custom_intent'
        - $ref: '#/components/parameters/custom_intent_mode'
        - $ref: '#/components/parameters/detect_entities'
        - $ref: '#/components/parameters/detect_language'
        - $ref: '#/components/parameters/diarize_version'
        - $ref: '#/components/parameters/diarize'
        - $ref: '#/components/parameters/dictation'
        - $ref: '#/components/parameters/encoding'
        - $ref: '#/components/parameters/extra'
        - $ref: '#/components/parameters/filler_words'
        - $ref: '#/components/parameters/intents'
        - $ref: '#/components/parameters/keywords'
        - $ref: '#/components/parameters/language'
        - $ref: '#/components/parameters/measurements'
        - $ref: '#/components/parameters/model'
        - $ref: '#/components/parameters/multichannel'
        - $ref: '#/components/parameters/numerals'
        - $ref: '#/components/parameters/paragraphs'
        - $ref: '#/components/parameters/profanity_filter'
        - $ref: '#/components/parameters/punctuate'
        - $ref: '#/components/parameters/redact'
        - $ref: '#/components/parameters/replace'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/sentiment'
        - $ref: '#/components/parameters/smart_format'
        - $ref: '#/components/parameters/summarize'
        - $ref: '#/components/parameters/tag'
        - $ref: '#/components/parameters/topics'
        - $ref: '#/components/parameters/utterances'
        - $ref: '#/components/parameters/utt_split'
        - $ref: '#/components/parameters/version'
      responses:
        '200':
          description: Successful transcription
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        '400':
          $ref: '#/components/responses/bad_request'
      callbacks:
        transcriptionCallback:
          '{$request.query.callback}':
            post:
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/response'
              responses:
                '200':
                  description: We expect a 200 to determine whether the callback was successfully received
  /v1/read:
    summary: Analyze text content
    description: Use Deepgram's speech-to-text API to analyze the content of text sources
    post:
      tags:
        - Text Intelligence
      security:
        - ApiKeyAuth: []
      operationId: TextRead
      summary: Analyze text
      description: Analyze text content using Deepgram's text analysis API
      requestBody:
        description: Analyze a text file
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  format: uri
                  description: A URL pointing to the text source
                text:
                  type: string
                  description: The plain text to analyze
              oneOf:
                - required:
                    - url
                - required:
                    - text
      parameters:
        - $ref: '#/components/parameters/callback'
        - $ref: '#/components/parameters/callback_method'
        - $ref: '#/components/parameters/custom_topic'
        - $ref: '#/components/parameters/custom_topic_mode'
        - $ref: '#/components/parameters/intents'
        - $ref: '#/components/parameters/read_language'
        - $ref: '#/components/parameters/sentiment'
        - $ref: '#/components/parameters/read_summarize'
        - $ref: '#/components/parameters/topics'
      responses:
        '200':
          description: Successful text analysis
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/text_response'
        '400':
          $ref: '#/components/responses/bad_request'
      callbacks:
        transcriptionCallback:
          '{$request.query.callback}':
            post:
              description: Callback endpoint for text analysis results
              requestBody:
                description: The text analysis results
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/text_response'
              responses:
                '200':
                  description: We expect a 200 to determine whether the callback was successfully received
  /v1/speak:
    summary: Text to Speech transformation
    description: Use Deepgram's Aura text-to-speech API to transform text to speech
    post:
      tags:
        - Text to Speech
      security:
        - ApiKeyAuth: []
      summary: Transform text to speech
      description: Convert text into natural-sounding speech using Deepgram's TTS API
      operationId: speak
      requestBody:
        description: Transform text to speech
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  description: The text to transform to speech
      parameters:
        - $ref: '#/components/parameters/bit_rate'
        - $ref: '#/components/parameters/callback'
        - $ref: '#/components/parameters/container'
        - $ref: '#/components/parameters/speak_encoding'
        - $ref: '#/components/parameters/speak_model'
        - $ref: '#/components/parameters/speak_sample_rate'
      responses:
        '200':
          description: Successful text to speech
          content:
            audio/mpeg:
              schema:
                type: string
                format: binary
            audio/wav:
              schema:
                type: string
                format: binary
            audio/l16;rate=24000:
              schema:
                type: string
                format: binary
            audio/ogg;codecs=opus:
              schema:
                type: string
                format: binary
            audio/flac:
              schema:
                type: string
                format: binary
            audio/acc:
              schema:
                type: string
                format: binary
            audio/mulaw;rate=8000:
              schema:
                type: string
                format: binary
            audio/alaw;rate=8000:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/bad_request'
        '403':
          $ref: '#/components/responses/insufficient_permissions'
        '413':
          $ref: '#/components/responses/payload_too_large'
        '415':
          $ref: '#/components/responses/unsupported_media_type'
      callbacks:
        transcriptionCallback:
          '{$request.query.callback}':
            post:
              description: Callback endpoint for text-to-speech results
              requestBody:
                description: The text-to-speech processing results
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/speak_response'
              responses:
                '200':
                  description: We expect a 200 to determine whether the callback was successfully received
  /v1/projects:
    summary: List Projects
    description: Manage your projects
    get:
      tags:
        - Management API
      security:
        - ApiKeyAuth: []
      operationId: listProjects
      summary: List Projects
      description: Retrieves basic information about the projects associated with the API key
      responses:
        '200':
          description: A list of projects
          content:
            application/json:
              schema:
                type: object
                properties:
                  projects:
                    type: array
                    items:
                      type: object
                      properties:
                        project_id:
                          type: string
                          description: The unique identifier of the project
                        name:
                          type: string
                          description: The name of the project
        '403':
          $ref: '#/components/responses/authentication_failed'
  /v1/projects/{project_id}:
    summary: Project Details
    description: Manage individual project details and settings
    parameters:
      - $ref: '#/components/parameters/project_id'
    get:
      tags:
        - Management API
      security:
        - ApiKeyAuth: []
      operationId: getProject
      summary: Get a Project
      description: Retrieves information about the specified project
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/end'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: A project
          content:
            application/json:
              schema:
                type: object
                properties:
                  project_id:
                    type: string
                    description: The unique identifier of the project
                  name:
                    type: string
                    description: The name of the project
        '400':
          $ref: '#/components/responses/projects_bad_request'
        '403':
          $ref: '#/components/responses/authentication_failed'
        '404':
          $ref: '#/components/responses/project_not_found'
    patch:
      tags:
        - Management API
      security:
        - ApiKeyAuth: []
      operationId: updateProject
      summary: Updates the specified project
      description: Updates the name or other properties of an existing project
      parameters:
        - $ref: '#/components/parameters/project_id'
      requestBody:
        description: The name of the project
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the project
              example:
                name: My Project
      responses:
        '200':
          description: A project
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: confirmation message
                example:
                  message: Successfully updated project info.
        '400':
          $ref: '#/components/responses/projects_bad_request'
        '403':
          $ref: '#/components/responses/authentication_failed'
        '404':
          $ref: '#/components/responses/project_not_found'
    delete:
      tags:
        - Management API
      security:
        - ApiKeyAuth: []
      operationId: deleteProject
      summary: Deletes a project
      description: Deletes the specified project
      parameters:
        - $ref: '#/components/parameters/project_id'
      responses:
        '200':
          description: A project
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: confirmation message
                example:
                  message: Successfully deleted a project.
        '400':
          $ref: '#/components/responses/projects_bad_request'
        '403':
          $ref: '#/components/responses/authentication_failed'
        '404':
          $ref: '#/components/responses/project_not_found'
  /v1/projects/{project_id}/balances:
    description: Manage your project balances
    get:
      tags:
        - Management API
      security:
        - ApiKeyAuth: []
      operationId: getProjectBalances
      summary: Get Project Balances
      description: Generates a list of outstanding balances for the specified project
      parameters:
        - $ref: '#/components/parameters/project_id'
      responses:
        '200':
          description: A list of outstanding balances
          content:
            application/json:
              schema:
                type: object
                properties:
                  balances:
                    type: array
                    items:
                      type: object
                      properties:
                        balance_id:
                          type: string
                          description: The unique identifier of the balance
                        amount:
                          type: integer
                          default: 0
                          description: The amount of the balance
                        units:
                          type: string
                          description: The units of the balance, such as "USD"
                        purchase_order_id:
                          type: string
                          description: Description or reference of the purchase
              example:
                balances:
                  - balance_id: b123456-7890-1234-5678-901234
                    amount: 250
                    units: usd
                    purchase_order_id: b123456-7890-1234-5678-901234
        '400':
          $ref: '#/components/responses/projects_bad_request'
        '403':
          $ref: '#/components/responses/authentication_failed'
        '404':
          $ref: '#/components/responses/project_not_found'
  /v1/projects/{project_id}/balances/{balance_id}:
    description: Manage your project balances
    get:
      tags:
        - Management API
      security:
        - ApiKeyAuth: []
      operationId: getProjectBalance
      summary: Retrieves details about the specified balance
      description: Retrieves details about the specified balance
      parameters:
        - $ref: '#/components/parameters/project_id'
        - $ref: '#/components/parameters/balance_id'
      responses:
        '200':
          description: A specific balance
          content:
            application/json:
              schema:
                type: object
                properties:
                  balance_id:
                    type: string
                    description: The unique identifier of the balance
                  amount:
                    type: integer
                    default: 0
                    description: The amount of the balance
                  units:
                    type: string
                    description: The units of the balance, such as "USD"
                  purchase_order_id:
                    type: string
                    description: Description or reference of the purchase
              example:
                balance_id: b123456-7890-1234-5678-901234
                amount: 250
                units: usd
                purchase_order_id: b123456-7890-1234-5678-901234
        '400':
          $ref: '#/components/responses/projects_bad_request'
        '403':
          $ref: '#/components/responses/authentication_failed'
        '404':
          $ref: '#/components/responses/project_not_found'
  /v1/projects/{project_id}/models:
    description: Manage your project models
    get:
      tags:
        - Management API
      security:
        - ApiKeyAuth: []
      operationId: listProjectModels
      summary: Returns metadata on all the latest models that a specific project has access to, including non-public models.
      description: Returns metadata on all the latest models that a specific project has access to, including non-public models.
      parameters:
        - $ref: '#/components/parameters/project_id'
        - $ref: '#/components/parameters/include_outdated'
      responses:
        '200':
          description: A list of models
          content:
            application/json:
              schema:
                type: object
                properties:
                  stt:
                    type: array
                    items:
                      $ref: '#/components/schemas/stt_models'
                  tts:
                    type: array
                    items:
                      $ref: '#/components/schemas/tts_models'
        '400':
          $ref: '#/components/responses/projects_bad_request'
  /v1/projects/{project_id}/models/{model_id}:
    description: Manage your project models
    parameters:
      - $ref: '#/components/parameters/project_id'
      - $ref: '#/components/parameters/model_id'
    get:
      tags:
        - Management API
      security:
        - ApiKeyAuth: []
      operationId: getProjectModel
      summary: Returns metadata for a specific model
      description: Returns metadata for a specific model
      responses:
        '200':
          description: A specific model
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/stt_models'
                  - $ref: '#/components/schemas/tts_models'
        '400':
          $ref: '#/components/responses/projects_bad_request'
  /v1/projects/{project_id}/keys:
    description: Manage your project keys
    parameters:
      - $ref: '#/components/parameters/project_id'
    get:
      tags:
        - Management API
      security:
        - ApiKeyAuth: []
      operationId: listProjectKeys
      summary: Returns a list of API keys for a specific project
      description: Retrieves all API keys associated with the specified project
      parameters:
        - $ref: '#/components/parameters/project_id'
      responses:
        '200':
          description: A list of API keys
          content:
            application/json:
              schema:
                type: object
                properties:
                  api_keys:
                    type: array
                    items:
                      $ref: '#/components/schemas/keys'
        '403':
          $ref: '#/components/responses/authentication_failed'
        '404':
          $ref: '#/components/responses/project_not_found'
    post:
      tags:
        - Management API
      security:
        - ApiKeyAuth: []
      operationId: createProjectKey
      summary: Creates a new API key for a specific project
      description: Creates a new API key with specified settings for the project
      parameters:
        - $ref: '#/components/parameters/project_id'
      requestBody:
        description: The API key settings
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/keys'
      responses:
        '200':
          description: API key created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/key_created'
        '403':
          $ref: '#/components/responses/authentication_failed'
        '404':
          $ref: '#/components/responses/project_not_found'
  /v1/projects/{project_id}/keys/{key_id}:
    description: Manage your project keys
    get:
      tags:
        - Management API
      security:
        - ApiKeyAuth: []
      operationId: getProjectKey
      summary: Retrieves information about a specified API key
      description: Retrieves information about a specified API key
      parameters:
        - $ref: '#/components/parameters/project_id'
        - $ref: '#/components/parameters/key_id'
      responses:
        '200':
          description: A specific API key
          content:
            application/json:
              schema:
                type: object
                properties:
                  item:
                    $ref: '#/components/schemas/key'
        '403':
          $ref: '#/components/responses/authentication_failed'
        '404':
          $ref: '#/components/responses/project_not_found'
    delete:
      tags:
        - Management API
      security:
        - ApiKeyAuth: []
      operationId: deleteProjectKey
      summary: Deletes an API key for a specific project
      description: Deletes an API key for a specific project
      parameters:
        - $ref: '#/components/parameters/project_id'
        - $ref: '#/components/parameters/key_id'
      responses:
        '200':
          description: API key deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A message indicating that the API key was deleted
              example:
                message: Successfully deleted the API key!
        '403':
          $ref: '#/components/responses/authentication_failed'
        '404':
          $ref: '#/components/responses/project_not_found'
  /v1/projects/{project_id}/members:
    description: Manage your project members
    get:
      tags:
        - Management API
      security:
        - ApiKeyAuth: []
      operationId: listProjectMembers
      summary: Retrieves a list of account objects for a specific project
      description: Retrieves a list of account objects for a specific project
      parameters:
        - $ref: '#/components/parameters/project_id'
      responses:
        '200':
          description: A list of account objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  members:
                    type: array
                    items:
                      type: object
                      properties:
                        member_id:
                          type: string
                          description: The unique identifier of the member
                          scopes:
                            type: array
                            items:
                              type: string
                            description: The API scopes of the member
                          email:
                            type: string
                            first_name:
                              type: string
                            last_name:
                              type: string
        '403':
          $ref: '#/components/responses/authentication_failed'
        '404':
          $ref: '#/components/responses/project_not_found'
  /v1/projects/{project_id}/members/{member_id}:
    description: Manage your project members
    delete:
      tags:
        - Management API
      security:
        - ApiKeyAuth: []
      operationId: deleteProjectMember
      summary: Removes the specified member from a project
      description: Removes a member from the project using their unique member ID
      parameters:
        - $ref: '#/components/parameters/project_id'
        - $ref: '#/components/parameters/member_id'
      responses:
        '200':
          description: Delete the specific member from the project
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: confirmation message
                example:
                  message: Successfully removed account from project.
        '403':
          $ref: '#/components/responses/authentication_failed'
        '404':
          $ref: '#/components/responses/project_not_found'
  /v1/projects/{project_id}/members/{member_id}/scopes:
    description: Manage your project members
    get:
      tags:
        - Management API
      security:
        - ApiKeyAuth: []
      operationId: listProjectMemberScopes
      summary: Retrieves a list of scopes for a specific member
      description: Retrieves a list of scopes for a specific member
      parameters:
        - $ref: '#/components/parameters/project_id'
        - $ref: '#/components/parameters/member_id'
      responses:
        '200':
          description: A list of scopes for a specific member
          content:
            application/json:
              schema:
                type: object
                properties:
                  scopes:
                    type: array
                    items:
                      type: string
                    description: The API scopes of the member
        '403':
          $ref: '#/components/responses/authentication_failed'
        '404':
          $ref: '#/components/responses/project_not_found'
    put:
      tags:
        - Management API
      security:
        - ApiKeyAuth: []
      operationId: updateProjectMemberScopes
      summary: Updates the scopes for a specific member
      description: Updates the scopes for a specific member
      parameters:
        - $ref: '#/components/parameters/project_id'
        - $ref: '#/components/parameters/member_id'
      requestBody:
        description: A scope to update
        content:
          application/json:
            schema:
              type: object
              required:
                - scope
              properties:
                scope:
                  type: string
                  description: A scope to update
                  example: admin
      responses:
        '200':
          description: Updated the scopes for a specific member
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: confirmation message
                example:
                  message: Successfully updated the account scopes.
        '403':
          $ref: '#/components/responses/authentication_failed'
        '404':
          $ref: '#/components/responses/project_not_found'
  /v1/projects/{project_id}/invites:
    description: Manage your project invites
    get:
      tags:
        - Management API
      security:
        - ApiKeyAuth: []
      operationId: listProjectInvites
      summary: Generates a list of invites for a specific project
      description: Generates a list of invites for a specific project
      parameters:
        - $ref: '#/components/parameters/project_id'
      responses:
        '200':
          description: A list of invites for a specific project
          content:
            application/json:
              schema:
                type: object
                properties:
                  invites:
                    type: array
                    items:
                      type: object
                      properties:
                        email:
                          type: string
                          description: The email address of the invitee
                        scope:
                          type: string
                          description: The scope of the invitee
    post:
      tags:
        - Management API
      security:
        - ApiKeyAuth: []
      operationId: createProjectInvite
      summary: Generates an invite for a specific project
      description: Generates an invite for a specific project
      parameters:
        - $ref: '#/components/parameters/project_id'
      requestBody:
        description: email to invite to the project
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - scope
              properties:
                email:
                  type: string
                  description: The email address of the invitee
              scope:
                type: string
                description: The scope of the invitee
      responses:
        '200':
          description: The invite was successfully generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: confirmation message
        '400':
          $ref: '#/components/responses/invalid_request'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/authentication_failed'
        '404':
          $ref: '#/components/responses/project_not_found'
  /v1/projects/{project_id}/invites/{email}:
    description: Manage your project invites
    delete:
      tags:
        - Management API
      security:
        - ApiKeyAuth: []
      operationId: deleteProjectInvite
      summary: Deletes an invite for a specific project
      description: Deletes an invite for a specific project
      parameters:
        - $ref: '#/components/parameters/project_id'
        - $ref: '#/components/parameters/email'
      responses:
        '200':
          description: The invite was successfully deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: confirmation message
        '400':
          $ref: '#/components/responses/invalid_request'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/authentication_failed'
        '404':
          $ref: '#/components/responses/project_not_found'
  /v1/projects/{project_id}/leave:
    description: Manage your project accounts
    delete:
      tags:
        - Management API
      security:
        - ApiKeyAuth: []
      operationId: deleteProjectLeave
      summary: Removes the authenticated account from the specific project
      description: Removes the authenticated account from the specific project
      parameters:
        - $ref: '#/components/parameters/project_id'
      responses:
        '200':
          description: Successfully removed account from project
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: confirmation message
        '400':
          $ref: '#/components/responses/invalid_request'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/authentication_failed'
        '404':
          $ref: '#/components/responses/project_not_found'
  /v1/projects/{project_id}/requests:
    description: Manage your project requests
    get:
      tags:
        - Management API
      security:
        - ApiKeyAuth: []
      operationId: listProjectRequests
      summary: Generates a list of requests for a specific project
      description: Generates a list of requests for a specific project
      parameters:
        - $ref: '#/components/parameters/project_id'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/end'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: A list of requests for a specific project
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                    description: The page number of the paginated response
                  limit:
                    type: integer
                    description: The number of results per page
                  requests:
                    type: array
                    items:
                      $ref: '#/components/schemas/request'
        '400':
          $ref: '#/components/responses/projects_bad_request'
        '403':
          $ref: '#/components/responses/authentication_failed'
  /v1/projects/{project_id}/requests/{request_id}:
    description: Manage your project requests
    get:
      tags:
        - Management API
      security:
        - ApiKeyAuth: []
      operationId: getProjectRequest
      summary: Retrieves a specific request for a specific project
      description: Retrieves a specific request for a specific project
      parameters:
        - $ref: '#/components/parameters/project_id'
        - $ref: '#/components/parameters/request_id'
      responses:
        '200':
          description: A specific request for a specific project
          content:
            application/json:
              schema:
                type: object
                properties:
                  request:
                    type: object
                    $ref: '#/components/schemas/request'
  /v1/projects/{project_id}/usage:
    description: Manage your project usage
    get:
      tags:
        - Management API
      security:
        - ApiKeyAuth: []
      operationId: getProjectUsage
      summary: Retrieves the usage for a specific project
      description: Retrieves the usage for a specific project
      parameters:
        - $ref: '#/components/parameters/project_id'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/end'
        - $ref: '#/components/parameters/callback_method'
        - $ref: '#/components/parameters/callback'
        - $ref: '#/components/parameters/channels'
        - $ref: '#/components/parameters/custom_intent_mode'
        - $ref: '#/components/parameters/custom_intent'
        - $ref: '#/components/parameters/custom_topic_mode'
        - $ref: '#/components/parameters/custom_topic'
        - $ref: '#/components/parameters/detect_entities'
        - $ref: '#/components/parameters/detect_language'
        - $ref: '#/components/parameters/diarize'
        - $ref: '#/components/parameters/diarize_version'
        - $ref: '#/components/parameters/dictation'
        - $ref: '#/components/parameters/detect_topics'
        - $ref: '#/components/parameters/encoding'
        - $ref: '#/components/parameters/extra'
        - $ref: '#/components/parameters/filler_words'
        - $ref: '#/components/parameters/intents'
        - $ref: '#/components/parameters/keywords'
        - $ref: '#/components/parameters/language'
        - $ref: '#/components/parameters/measurements'
        - $ref: '#/components/parameters/model'
        - $ref: '#/components/parameters/multichannel'
        - $ref: '#/components/parameters/numerals'
        - $ref: '#/components/parameters/paragraphs'
        - $ref: '#/components/parameters/profanity_filter'
        - $ref: '#/components/parameters/punctuate'
        - $ref: '#/components/parameters/redact'
        - $ref: '#/components/parameters/replace'
        - $ref: '#/components/parameters/sample_rate'
        - $ref: '#/components/parameters/smart_format'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/sentiment'
        - $ref: '#/components/parameters/summarize'
        - $ref: '#/components/parameters/tag'
        - $ref: '#/components/parameters/topics'
        - $ref: '#/components/parameters/utterances'
        - $ref: '#/components/parameters/utt_split'
        - $ref: '#/components/parameters/version'
      responses:
        '200':
          $ref: '#/components/responses/usage'
        '400':
          $ref: '#/components/responses/invalid_request'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/authentication_failed'
        '404':
          $ref: '#/components/responses/project_not_found'
  /v1/projects/{project_id}/usage/fields:
    description: Manage your project usage
    get:
      tags:
        - Management API
      security:
        - ApiKeyAuth: []
      operationId: listProjectUsageFields
      summary: Lists the features, models, tags, languages, and processing method used
      description: Lists the features, models, tags, languages, and processing method used for requests in the specified project
      parameters:
        - $ref: '#/components/parameters/project_id'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/end'
      responses:
        '200':
          $ref: '#/components/responses/fields'
        '400':
          $ref: '#/components/responses/invalid_request'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/authentication_failed'
        '404':
          $ref: '#/components/responses/project_not_found'
  /v1/projects/{project_id}/purchases:
    description: Manage your project purchases
    get:
      tags:
        - Management API
      security:
        - ApiKeyAuth: []
      operationId: listProjectPurchases
      summary: Returns the original purchased amount
      description: Returns the original purchased amount on an order transaction
      parameters:
        - $ref: '#/components/parameters/project_id'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/limit'
  /v1/models:
    description: Manage your project models
    get:
      tags:
        - Management API
      security:
        - ApiKeyAuth: []
      operationId: listModels
      summary: Returns metadata on all the latest public models
      description: Returns metadata on all the latest public models
      parameters:
        - $ref: '#/components/parameters/include_outdated'
      responses:
        '200':
          $ref: '#/components/responses/all_models'
        '400':
          $ref: '#/components/responses/projects_bad_request'
  /v1/models/{model_id}:
    description: Manage your project models
    get:
      tags:
        - Management API
      security:
        - ApiKeyAuth: []
      operationId: getModel
      summary: Returns metadata for a specific model
      description: Returns metadata for a specific model
      parameters:
        - $ref: '#/components/parameters/model_id'
      responses:
        '200':
          $ref: '#/components/responses/model'
        '400':
          $ref: '#/components/responses/projects_bad_request'
  /v1/projects/{project_id}/self-hosted/distribution/credentials:
    description: Returns sets of distribution credentials for the specified project
    get:
      tags:
        - Management API
      security:
        - ApiKeyAuth: []
      operationId: listSelfHostedDistCreds
      summary: Lists sets of distribution credentials for the specified project
      description: Lists sets of distribution credentials for the specified project
      parameters:
        - $ref: '#/components/parameters/project_id'
      responses:
        '200':
          $ref: '#/components/responses/credentials'
        '403':
          $ref: '#/components/responses/authentication_failed'
        '404':
          $ref: '#/components/responses/project_not_found'
    post:
      tags:
        - Management API
      security:
        - ApiKeyAuth: []
      operationId: createSelfHostedDistCreds
      summary: Creates a set of distribution credentials for the specified project
      description: Creates a set of distribution credentials for the specified project
      parameters:
        - $ref: '#/components/parameters/project_id'
        - $ref: '#/components/parameters/distribution_comment'
        - $ref: '#/components/parameters/distribution_scopes'
        - $ref: '#/components/parameters/distribution_provider'
      requestBody:
        description: The set of distribution credentials to create
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  type: string
  /v1/projects/{project_id}/self-hosted/distribution/credentials/{distribution_credentials_id}:
    description: Returns a single set of distribution credentials for the specified project
    get:
      tags:
        - Management API
      security:
        - ApiKeyAuth: []
      operationId: getSelfHostedCredentials
      summary: Get a Project Self-Hosted Distribution Credential
      description: Returns a set of distribution credentials for the specified project
      parameters:
        - $ref: '#/components/parameters/project_id'
        - $ref: '#/components/parameters/distribution_credentials_id'
      responses:
        '200':
          $ref: '#/components/responses/credential'
        '403':
          $ref: '#/components/responses/authentication_failed'
        '404':
          $ref: '#/components/responses/project_not_found'
    delete:
      tags:
        - Management API
      security:
        - ApiKeyAuth: []
      operationId: deleteSelfHostedDistCreds
      summary: Deletes a set of distribution credentials for the specified project
      description: Deletes a set of distribution credentials for the specified project
      parameters:
        - $ref: '#/components/parameters/project_id'
        - $ref: '#/components/parameters/distribution_credentials_id'
      responses:
        '200':
          $ref: '#/components/responses/credential'
        '403':
          $ref: '#/components/responses/authentication_failed'
        '404':
          $ref: '#/components/responses/project_not_found'
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
      description: |
        Use the `Authorization` header with the format `token <API KEY>`. Example:`Authorization token 12345abcdef`
  parameters:
    callback:
      name: callback
      in: query
      required: false
      description: URL to which we'll make the callback request
      schema:
        type: string
      example: https://example.com
    callback_method:
      name: callback_method
      in: query
      required: false
      description: HTTP method by which the callback request will be made
      schema:
        default: POST
        enum:
          - POST
          - PUT
      example: PUT
    custom_topic:
      name: custom_topic
      in: query
      required: false
      description: Custom topics you want the model to detect within your input audio or text if present Submit up to 100
      style: form
      explode: true
      schema:
        oneOf:
          - type: string
          - type: array
            items:
              type: string
            maxItems: 100
      example:
        - unsubscribe
        - account%20deletion
    custom_topic_mode:
      name: custom_topic_mode
      in: query
      required: false
      description: Sets how the model will interpret strings submitted to the `custom_topic` param. When `strict`, the model will only return topics submitted using the `custom_topic` param. When `extended`, the model will return its own detected topics in addition to those submitted using the `custom_topic` param
      schema:
        default: extended
        type: string
        enum:
          - extended
          - strict
      example: strict
    custom_intent:
      name: custom_intent
      in: query
      required: false
      description: Custom intents you want the model to detect within your input audio if present
      style: form
      explode: true
      schema:
        oneOf:
          - type: string
            example: unsubscribe
          - type: array
            items:
              type: string
              maxItems: 100
              example: unsubscribe, account deletion
    custom_intent_mode:
      name: custom_intent_mode
      in: query
      required: false
      description: Sets how the model will interpret intents submitted to the `custom_intent` param. When `strict`, the model will only return intents submitted using the `custom_intent` param. When `extended`, the model will return its own detected intents in addition those submitted using the `custom_intents` param
      schema:
        default: extended
        type: string
        enum:
          - extended
          - strict
      example: strict
    detect_entities:
      name: detect_entities
      in: query
      required: false
      description: Identifies and extracts key entities from content in submitted audio
      schema:
        default: false
        type: boolean
      example: true
    detect_language:
      name: detect_language
      in: query
      required: false
      description: Identifies the dominant language spoken in submitted audio
      style: form
      explode: true
      schema:
        oneOf:
          - type: boolean
            default: false
            example: true
          - type: array
            items:
              type: string
              example: en, fr
    diarize_version:
      name: diarize_version
      in: query
      required: false
      description: Version of the diarization feature to use. Only used when the diarization feature is enabled (`diarize=true` is passed to the API)
      default: v2
      schema:
        type: string
      example: v2
    diarize:
      name: diarize
      in: query
      required: false
      description: Recognize speaker changes. Each word in the transcript will be assigned a speaker number starting at 0
      schema:
        default: false
        type: boolean
      example: true
    dictation:
      name: dictation
      in: query
      required: false
      description: Identify and extract key entities from content in submitted audio
      schema:
        default: false
        type: boolean
        example: true
    encoding:
      name: encoding
      in: query
      required: false
      description: Specify the expected encoding of your submitted audio
      schema:
        type: string
        enum:
          - linear16
          - flac
          - mulaw
          - amr-nb
          - amr-wb
          - opus
          - speex
          - g729
      example: linear16
    extra:
      name: extra
      in: query
      required: false
      description: Arbitrary key-value pairs that are attached to the API response for usage in downstream processing
      style: form
      explode: true
      schema:
        oneOf:
          - type: string
          - type: array
            items:
              type: string
      example:
        - key:value
        - user:1234567890
    filler_words:
      name: filler_words
      in: query
      required: false
      description: Filler Words can help transcribe interruptions in your audio, like "uh" and "um"
      schema:
        default: false
        type: boolean
      example: true
    intents:
      name: intents
      in: query
      required: false
      description: Recognizes speaker intent throughout a transcript or text
      schema:
        default: false
        type: boolean
      example: true
    keywords:
      name: keywords
      in: query
      required: false
      description: Keywords can boost or suppress specialized terminology and brands
      style: form
      explode: true
      schema:
        oneOf:
          - type: string
          - type: array
            items:
              type: string
      example:
        - Twilio:2
        - Algolia
    language:
      name: language
      in: query
      required: false
      description: The [BCP-47 language tag](https://tools.ietf.org/html/bcp47) that hints at the primary spoken language
      schema:
        default: en
        oneOf:
          - type: string
            title: Nova 2 model languages
            enum:
              - bg
              - ca
              - cz
              - da
              - da-DK
              - nl
              - en
              - en-US
              - en-AU
              - en-GB
              - en-NZ
              - en-IN
              - et
              - fi
              - nl-BE
              - fr
              - fr-CA
              - de
              - de-CH
              - el
              - hi
              - hi-Latn
              - hu
              - id
              - it
              - ja
              - ko
              - ko-KR
              - lv
              - lt
              - ms
              - 'no'
              - pl
              - pt
              - pt-BR
              - ro
              - ru
              - sk
              - es
              - es-419
              - sv
              - sv-SE
              - th
              - th-TH
              - tr
              - uk
              - vi
            examples: en-US
          - type: string
            title: Nova model languages
            enum:
              - en
              - en-US
              - en-AU
              - en-GB
              - en-NZ
              - en-IN
              - es
              - es-419
            example: en-US
          - type: string
            title: Enhanced model languages
            description: Recommended for lower word error rates than Base, high accuracy timestamps, and use cases that require keyword boosting.
            enum:
              - da
              - nl
              - en
              - en-US
              - nl
              - fr
              - de
              - hi
              - hi-Latn
              - id
              - it
              - ja
              - ko
              - 'no'
              - pl
              - pt
              - pt-BR
              - ru
              - es
              - es-419
              - es-LATAM
              - sv
              - taq
              - tr
              - uk
            example: en-US
          - type: string
            title: Base model languages.
            description: Recommended for large transcription volumes and high accuracy timestamps.
            enum:
              - zh
              - zh-CN
              - zh-TW
              - da
              - nl
              - en
              - en-US
              - nl
              - fr
              - fr-CA
              - de
              - hi
              - hi-Latn
              - id
              - it
              - ja
              - ko
              - 'no'
              - pl
              - pt
              - pt-BR
              - ru
              - es
              - es-419
              - es-LATAM
              - sv
              - taq
              - tr
              - uk
            example: en-US
    measurements:
      name: measurements
      in: query
      required: false
      description: Spoken measurements will be converted to their corresponding abbreviations
      schema:
        default: false
        type: boolean
      example: true
    model:
      name: model
      in: query
      required: false
      description: AI model used to process submitted audio
      schema:
        default: base-general
        oneOf:
          - type: string
            description: Our public models available to all accounts
            enum:
              - nova-2
              - nova-2-general
              - nova-2-meeting
              - nova-2-finance
              - nova-2-conversationalai
              - nova-2-voicemail
              - nova-2-video
              - nova-2-medical
              - nova-2-drivethru
              - nova-2-automotive
              - nova
              - nova-general
              - nova-phonecall
              - nova-medical
              - enhanced
              - enhanced-general
              - enhanced-meeting
              - enhanced-phonecall
              - enhanced-finance
              - base
              - meeting
              - phonecall
              - finance
              - conversationalai
              - voicemail
              - video
            example: nova-2
          - type: string
            description: Custom string if you've had a model trained by Deepgram
            example: custom-model-123
    multichannel:
      name: multichannel
      in: query
      required: false
      description: Transcribe each audio channel independently
      schema:
        default: false
        type: boolean
      example: true
    numerals:
      name: numerals
      in: query
      required: false
      description: Numerals converts numbers from written format to numerical format
      schema:
        default: false
        type: boolean
      example: true
    paragraphs:
      name: paragraphs
      in: query
      required: false
      description: Splits audio into paragraphs to improve transcript readability
      schema:
        default: false
        type: boolean
      example: true
    profanity_filter:
      name: profanity_filter
      in: query
      required: false
      description: Profanity Filter looks for recognized profanity and converts it to the nearest recognized non-profane word or removes it from the transcript completely
      schema:
        default: false
        type: boolean
      example: true
    punctuate:
      name: punctuate
      in: query
      required: false
      description: Add punctuation and capitalization to the transcript
      schema:
        default: false
        type: boolean
      example: true
    redact:
      name: redact
      in: query
      required: false
      description: Redaction removes sensitive information from your transcripts
      style: form
      explode: true
      schema:
        default: false
        oneOf:
          - type: string
          - type: array
            items:
              type: string
              enum:
                - pci
                - pii
                - numbers
            maxItems: 100
      example:
        - pii
        - pci
    replace:
      name: replace
      in: query
      required: false
      description: Search for terms or phrases in submitted audio and replaces them
      style: form
      explode: true
      schema:
        oneOf:
          - type: string
          - type: array
            items:
              type: string
      example:
        - monika:Monica
        - jon:John
    search:
      name: search
      in: query
      required: false
      description: Search for terms or phrases in submitted audio
      style: form
      explode: true
      schema:
        oneOf:
          - type: string
          - type: array
            items:
              type: string
      example:
        - Deepgram
        - Text to Speech
    sentiment:
      name: sentiment
      in: query
      required: false
      description: Recognizes the sentiment throughout a transcript or text
      schema:
        default: false
        type: boolean
      example: true
    smart_format:
      name: smart_format
      in: query
      required: false
      description: Apply formatting to transcript output. When set to true, additional formatting will be applied to transcripts to improve readability
      schema:
        default: false
        type: boolean
      example: true
    summarize:
      name: summarize
      in: query
      required: false
      description: Summarize content
      schema:
        default: false
        oneOf:
          - title: Versions
            type: string
            enum:
              - v2
              - v1
          - title: Legacy
            type: boolean
      example: v2
    tag:
      name: tag
      in: query
      required: false
      description: Label your requests for the purpose of identification during usage reporting
      style: form
      explode: true
      schema:
        oneOf:
          - type: string
          - type: array
            items:
              type: string
      example:
        - test
    topics:
      name: topics
      in: query
      required: false
      description: Detect topics throughout a transcript or text
      schema:
        default: false
        type: boolean
      example: true
    utterances:
      name: utterances
      in: query
      required: false
      description: Segments speech into meaningful semantic units
      schema:
        default: false
        type: boolean
      example: true
    utt_split:
      name: utt_split
      in: query
      required: false
      description: Seconds to wait before detecting a pause between words in submitted audio
      schema:
        default: 0.8
        type: number
      example: 1.2
    version:
      name: version
      in: query
      required: false
      externalDocs:
        description: STT Models
        url: https://developers.deepgram.com/docs/version
      description: Version of an AI model to use
      schema:
        default: latest
        oneOf:
          - type: string
            description: Use the latest version of a model
            enum:
              - latest
            example: latest
          - type: string
            description: Use a previous version of a model
            example: model-123
    read_language:
      name: read_language
      in: query
      required: false
      description: The [BCP-47 language tag](https://tools.ietf.org/html/bcp47) that hints at the primary spoken language
      schema:
        type: string
        default: en
        enum:
          - en
      example: en
    read_summarize:
      name: read_summarize
      in: query
      required: false
      externalDocs:
        description: Summarize
        url: https://developers.deepgram.com/docs/text-summarization
      description: Summarize text
      schema:
        default: false
        type: boolean
      example: true
    bit_rate:
      name: bit_rate
      in: query
      required: false
      description: The bitrate of the audio in bits per second. Choose from predefined ranges or specific values based on the encoding type.
      default: 48000
      schema:
        oneOf:
          - title: mp3(default)
            description: Encoding - mp3(default). Supported bitrates - 32000, 48000(default) bps.
            type: integer
            enum:
              - 32000
              - 48000
          - title: opus
            description: Encoding - opus. Bitrate range - 4000-650000 bps.
            type: integer
            minimum: 4000
            maximum: 650000
          - title: aac
            description: Encoding -aac. Bitrate range - 4000-192000 bps.
            type: integer
            minimum: 4000
            maximum: 192000
    container:
      name: container
      in: query
      required: false
      description: Container specifies the file format wrapper for the output audio. The available options depend on the encoding type.
      default: wav
      schema:
        oneOf:
          - title: linear16
            description: Encoding - linear16. Supported container - wav (default), or no container.
            type: string
            enum:
              - wav
            nullable: true
          - title: mulaw
            description: Encoding - mulaw. Supported container - wav (default), or no container.
            type: string
            enum:
              - wav
            nullable: true
          - title: alaw
            description: Encoding - alaw. Supported container - wav (default), or no container.
            type: string
            enum:
              - wav
            nullable: true
          - title: opus
            description: Encoding - opus. Supported container - ogg (default).
            type: string
            enum:
              - ogg
    speak_encoding:
      name: speak_encoding
      in: query
      required: false
      description: Encoding allows you to specify the expected encoding of your audio output
      default: mp3
      schema:
        oneOf:
          - title: linear16
            description: Encoding - linear16. Uncompressed, high-quality audio format often used for telephony or audio processing.
            type: string
            enum:
              - linear16
          - title: flac
            description: Encoding - flac. Lossless audio format for high-quality compression.
            type: string
            enum:
              - flac
          - title: mulaw
            description: Encoding - mulaw. Compressed audio format commonly used in telephony.
            type: string
            enum:
              - mulaw
          - title: alaw
            description: Encoding - alaw. Similar to mulaw but used in international telephony.
            type: string
            enum:
              - alaw
          - title: mp3
            description: Encoding - mp3. Popular compressed audio format for music and streaming.
            type: string
            enum:
              - mp3
          - title: opus
            description: Encoding - opus. High-compression audio format optimized for real-time communications.
            type: string
            enum:
              - opus
          - title: aac
            description: Encoding - aac. Advanced audio format offering better quality at smaller file sizes than mp3.
            type: string
            enum:
              - aac
      example: linear16
    speak_model:
      name: speak_model
      in: query
      required: false
      description: AI model used to process submitted text
      default: aura-asteria-en
      schema:
        type: string
        enum:
          - aura-asteria-en
          - aura-luna-en
          - aura-stella-en
          - aura-athena-en
          - aura-hera-en
          - aura-orion-en
          - aura-arcas-en
          - aura-perseus-en
          - aura-angus-en
          - aura-orpheus-en
          - aura-helios-en
          - aura-zeus-en
      example: aura-asteria-en
    speak_sample_rate:
      name: speak_sample_rate
      in: query
      required: false
      description: Sample Rate specifies the sample rate for the output audio. Based on the encoding, different sample rates are supported. For some encodings, the sample rate is not configurable
      default: 24000
      schema:
        oneOf:
          - title: linear16
            description: Encoding - linear16. Supported sample rates - 8000, 16000, 24000, 32000, 48000 Hz.
            type: integer
            enum:
              - 8000
              - 16000
              - 24000
              - 32000
              - 48000
          - title: mulaw
            description: Encoding - mulaw. Supported sample rates - 8000, 16000 Hz.
            type: integer
            enum:
              - 8000
              - 16000
          - title: alaw
            description: Encoding - alaw. Supported sample rates - 8000, 16000 Hz.
            type: integer
            enum:
              - 8000
              - 16000
          - title: mp3
            description: Encoding - mp3. Sample rate is fixed and not configurable (22050 Hz).
            type: integer
            enum:
              - 22050
          - title: opus
            description: Encoding - opus. Sample rate is fixed at 48000 Hz.
            type: integer
            enum:
              - 48000
      example: 24000
    project_id:
      name: project_id
      in: path
      required: true
      description: The unique identifier of the project
      schema:
        type: string
      example: 123456-7890-1234-5678-901234
    limit:
      name: limit
      in: query
      required: false
      description: Number of results to return per page. Default 10. Range [1,1000]
      schema:
        type: integer
        default: 10
        minimum: 1
        maximum: 1000
      example: 10
    start:
      name: start
      in: query
      required: false
      description: Start date of the requested date range. Formats accepted are YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM
      schema:
        type: string
        format: date-time
      example: '2024-07-01T00:00:00'
    end:
      name: end
      in: query
      required: false
      description: End date of the requested date range. Formats accepted are YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM
      schema:
        type: string
        format: date-time
      example: '2024-07-31T00:00:00'
    page:
      name: page
      in: query
      required: false
      description: Navigate and return the results to retrieve specific portions of information of the response
      schema:
        type: integer
      example: 10
    balance_id:
      name: balance_id
      in: path
      required: true
      description: The unique identifier of the balance
      schema:
        type: string
      example: 123456-7890-1234-5678-901234
    include_outdated:
      name: include_outdated
      in: query
      required: true
      description: returns non-latest versions of models
      schema:
        type: boolean
      example: true
    model_id:
      name: model_id
      in: path
      required: true
      description: The specific UUID of the model
      schema:
        type: string
      example: af6e9977-99f6-4d8f-b6f5-dfdf6fb6e291
    key_id:
      name: key_id
      in: path
      required: true
      description: The unique identifier of the API key
      schema:
        type: string
      example: '123456789012345678901234'
    member_id:
      name: member_id
      in: path
      required: true
      description: The unique identifier of the Member
      schema:
        type: string
      example: '123456789012345678901234'
    email:
      name: email
      in: path
      required: true
      description: The email address of the member
      schema:
        type: string
      example: john.doe@example.com
    request_id:
      name: request_id
      in: path
      required: true
      description: The unique identifier of the request
      schema:
        type: string
      example: 123456-7890-1234-5678-901234
    channels:
      name: channels
      in: query
      required: false
      description: The number of channels in the submitted audio
      default: 1
      schema:
        type: integer
        format: int32
      example: 2
    detect_topics:
      name: detect_topics
      in: query
      required: false
      description: Identify and extract key topics
      schema:
        default: false
        type: boolean
      example: true
    sample_rate:
      name: sample_rate
      in: query
      required: false
      description: Sample rate of submitted audio. Required (and only read) when a value is provided for encoding
      default: 1
      schema:
        type: integer
        format: int32
      example: 8000
    distribution_comment:
      name: comment
      in: query
      required: false
      description: Optional comment about the credentials
      schema:
        type: string
      example: My Self-Hosted Distribution Credentials
    distribution_scopes:
      name: scopes
      in: query
      required: true
      description: List of permission scopes for the credentials
      schema:
        default:
          - self-hosted:products
        type: array
        items:
          type: string
          enum:
            - self-hosted:products
            - self-hosted:product:api
            - self-hosted:product:engine
            - self-hosted:product:license-proxy
            - self-hosted:product:dgtools
            - self-hosted:product:billing
            - self-hosted:product:hotpepper
            - self-hosted:product:metrics-server
      example:
        - self-hosted:products
    distribution_provider:
      name: provider
      in: query
      required: true
      description: The provider of the distribution service
      schema:
        default: quay
        type: string
        enum:
          - quay
      example: quay
    distribution_credentials_id:
      name: distribution_credentials_id
      in: path
      required: true
      description: The UUID of the distribution credentials
      schema:
        type: string
      example: 8b36cfd0-472f-4a21-833f-2d6343c3a2f3
  schemas:
    metadata:
      required:
        - request_id
        - sha256
        - created
        - duration
        - channels
        - models
        - model_info
      type: object
      properties:
        transaction_key:
          type: string
          default: deprecated
          deprecated: true
        request_id:
          type: string
          format: uuid
          example: a847f427-4ad5-4d67-9b95-db801e58251c
        sha256:
          type: string
          example: 154e291ecfa8be6ab8343560bcc109008fa7853eb5372533e8efdefc9b504c33
        created:
          type: string
          format: date-time
          example: '2024-05-12T18:57:13.426Z'
        duration:
          type: number
          example: 25.933313
        channels:
          type: number
          example: 1
        models:
          type: array
          items:
            type: string
          example:
            - 30089e05-99d1-4376-b32e-c263170674af
        model_info:
          type: object
          patternProperties:
            ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$:
              type: object
              properties:
                name:
                  type: string
                version:
                  type: string
                arch:
                  type: string
          additionalProperties: false
          example:
            30089e05-99d1-4376-b32e-c263170674af:
              name: 2-general-nova
              version: 2024-01-09.29447
              arch: nova-2
        summary_info:
          type: object
          properties:
            model_uuid:
              type: string
              example: 67875a7f-c9c4-48a0-aa55-5bdb8a91c34a
            input_tokens:
              type: number
              example: 95
            output_tokens:
              type: number
              example: 63
        sentiment_info:
          type: object
          properties:
            model_uuid:
              type: string
              example: 80ab3179-d113-4254-bd6b-4a2f96498695
            input_tokens:
              type: number
              example: 105
            output_tokens:
              type: number
              example: 105
        topics_info:
          type: object
          properties:
            model_uuid:
              type: string
              example: 80ab3179-d113-4254-bd6b-4a2f96498695
            input_tokens:
              type: number
              example: 105
            output_tokens:
              type: number
              example: 7
        intents_info:
          type: object
          properties:
            model_uuid:
              type: string
              example: 80ab3179-d113-4254-bd6b-4a2f96498695
            input_tokens:
              type: number
              example: 105
            output_tokens:
              type: number
              example: 4
        tags:
          type: array
          items:
            type: string
          example:
            - test
    channels:
      type: array
      items:
        type: object
        properties:
          search:
            type: array
            items:
              type: object
              properties:
                query:
                  type: string
                hits:
                  type: array
                  items:
                    type: object
                    properties:
                      confidence:
                        type: number
                        format: float
                      start:
                        type: number
                        format: float
                      end:
                        type: number
                        format: float
                      snippet:
                        type: string
          alternatives:
            type: array
            items:
              type: object
              properties:
                transcript:
                  type: string
                confidence:
                  type: number
                  format: float
                words:
                  type: array
                  items:
                    type: object
                    properties:
                      word:
                        type: string
                      start:
                        type: number
                        format: float
                      end:
                        type: number
                        format: float
                      confidence:
                        type: number
                        format: float
                paragraphs:
                  type: object
                  properties:
                    transcript:
                      type: string
                    paragraphs:
                      type: array
                      items:
                        type: object
                        properties:
                          sentences:
                            type: array
                            items:
                              type: object
                              properties:
                                text:
                                  type: string
                                start:
                                  type: number
                                  format: float
                                end:
                                  type: number
                                  format: float
                          speaker:
                            type: integer
                            format: int32
                          num_words:
                            type: integer
                            format: int32
                          start:
                            type: number
                            format: float
                          end:
                            type: number
                            format: float
                summaries:
                  type: array
                  items:
                    type: object
                    properties:
                      summary:
                        type: string
                      start_word:
                        type: integer
                        format: int32
                      end_word:
                        type: integer
                        format: int32
                topics:
                  type: array
                  items:
                    type: object
                    properties:
                      text:
                        type: string
                      start_word:
                        type: integer
                        format: int32
                      end_word:
                        type: integer
                        format: int32
                      topics:
                        type: array
                        items:
                          type: string
          detected_language:
            type: string
    utterances:
      type: array
      items:
        type: object
        properties:
          start:
            type: number
            format: float
          end:
            type: number
            format: float
          confidence:
            type: number
            format: float
          channel:
            type: integer
            format: int32
          transcript:
            type: string
          words:
            type: array
            items:
              type: object
              properties:
                word:
                  type: string
                start:
                  type: number
                  format: float
                end:
                  type: number
                  format: float
                confidence:
                  type: number
                  format: float
                speaker:
                  type: integer
                  format: int32
                speaker_confidence:
                  type: integer
                  format: int32
                punctuated_word:
                  type: string
          speaker:
            type: integer
            format: int32
          id:
            type: string
            format: uuid
    summary:
      type: object
      properties:
        result:
          type: string
          example: success
        short:
          type: string
          example: Speaker 0 discusses the significance of the first all-female spacewalk with an all-female team, stating that it is a tribute to the skilled and qualified women who were denied opportunities in the past.
    topics:
      type: object
      description: Output whenever `topics=true` is used
      properties:
        results:
          type: object
          properties:
            topics:
              type: object
              properties:
                segments:
                  type: array
                  items:
                    type: object
                    properties:
                      text:
                        type: string
                        example: And, um, I think if it signifies anything, it is, uh, to honor the the women who came before us who, um, were skilled and qualified, um, and didn't get the the same opportunities that we have today.
                      start_word:
                        type: integer
                        example: 32
                      end_word:
                        type: integer
                        example: 69
                      topics:
                        type: array
                        items:
                          type: object
                          properties:
                            topic:
                              type: string
                              example: Spacewalk
                            confidence_score:
                              type: number
                              format: float
                              example: 0.91581345
    intents:
      type: object
      description: Output whenever `intents=true` is used
      properties:
        results:
          type: object
          properties:
            intents:
              type: object
              properties:
                segments:
                  type: array
                  items:
                    type: object
                    properties:
                      text:
                        type: string
                        example: If you found this valuable, you can subscribe to the show on spotify or your favorite podcast app.
                      start_word:
                        type: integer
                        example: 354
                      end_word:
                        type: integer
                        example: 414
                      intents:
                        type: array
                        items:
                          type: object
                          properties:
                            intent:
                              type: string
                              example: Encourage podcasting
                            confidence_score:
                              type: number
                              format: float
                              example: 0.0038975573
    sentiments:
      type: object
      description: Output whenever `sentiment=true` is used
      properties:
        segments:
          type: array
          items:
            - type: object
              properties:
                text:
                  type: string
                  example: Yeah. As as much as, um, it's worth celebrating, uh, the first, uh, spacewalk, um, with an all-female team, I think many of us are looking forward to it just being normal. And, um, I think if it signifies anything, it is, uh, to honor the the women who came before us who, um, were skilled and qualified, um, and didn't get the the same opportunities that we have today.
                start_word:
                  type: number
                  example: 0
                end_word:
                  type: number
                  example: 69
                sentiment:
                  type: string
                  example: positive
                sentiment_score:
                  type: number
                  example: 0.5810546875
        average:
          type: object
          properties:
            sentiment:
              type: string
              example: positive
            sentiment_score:
              type: number
              example: 0.5810185185185185
    results:
      required:
        - channels
      type: object
      properties:
        channels:
          $ref: '#/components/schemas/channels'
        utterances:
          $ref: '#/components/schemas/utterances'
        summary:
          $ref: '#/components/schemas/summary'
        topics:
          $ref: '#/components/schemas/topics'
        intents:
          $ref: '#/components/schemas/intents'
        sentiments:
          $ref: '#/components/schemas/sentiments'
    response:
      description: The standard transcription response
      required:
        - metadata
        - results
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
          x-collapse: true
        results:
          $ref: '#/components/schemas/results'
    text_metadata:
      required:
        - request_id
        - created
        - language
        - summary_info
        - sentiment_info
        - topics_info
        - intents_info
      type: object
      properties:
        metadata:
          type: object
          properties:
            request_id:
              type: string
              format: uuid
              example: d04af392-db11-4c1d-83e1-20e34f0b8999
            created:
              type: string
              format: date-time
              example: '2024-11-18T23:47:44.674Z'
            language:
              type: string
              example: en
            summary_info:
              type: object
              properties:
                model_uuid:
                  type: string
                  format: uuid
                input_tokens:
                  type: integer
                output_tokens:
                  type: integer
            sentiment_info:
              type: object
              properties:
                model_uuid:
                  type: string
                  format: uuid
                input_tokens:
                  type: integer
                output_tokens:
                  type: integer
            topics_info:
              type: object
              properties:
                model_uuid:
                  type: string
                  format: uuid
                input_tokens:
                  type: integer
                output_tokens:
                  type: integer
            intents_info:
              type: object
              properties:
                model_uuid:
                  type: string
                  format: uuid
                input_tokens:
                  type: integer
                output_tokens:
                  type: integer
    text_summary:
      summary:
        type: object
        description: Output whenever `summary=true` is used
        properties:
          results:
            type: object
            properties:
              summary:
                type: object
                properties:
                  text:
                    type: string
                    example: The summary of the text submitted.
    text_results:
      type: object
      properties:
        summary:
          $ref: '#/components/schemas/text_summary'
        topics:
          $ref: '#/components/schemas/topics'
        intents:
          $ref: '#/components/schemas/intents'
        sentiments:
          $ref: '#/components/schemas/sentiments'
    text_response:
      description: The standard text response
      required:
        - metadata
        - results
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/text_metadata'
          x-collapse: true
        results:
          $ref: '#/components/schemas/text_results'
    speak_response:
      description: The standard text response
      properties:
        results:
          type: string
          format: binary
    stt_models:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
            example: conversationalai
          canonical_name:
            type: string
            example: conversationalai
          architecture:
            type: string
            example: base
          languages:
            type: array
            items:
              type: string
            example:
              - en
              - en-us
          version:
            type: string
            example: 2021-11-10.1
          uuid:
            type: string
            example: 6b28e919-8427-4f32-9847-492e2efd7daf
          batch:
            type: boolean
            example: true
          streaming:
            type: boolean
            example: true
          formatted_output:
            type: boolean
            example: true
    tts_models:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
            example: zeus
          canonical_name:
            type: string
            example: aura-zeus-en
          architecture:
            type: string
            example: aura
          languages:
            type: array
            items:
              type: string
            example:
              - en
              - en-us
          version:
            type: string
            example: 2024-07-30.0
          uuid:
            type: string
            example: 9c28bce5-f144-4d32-9034-843aa7aed63e
          metadata:
            type: object
            properties:
              accent:
                type: string
                example: American
              color:
                type: string
                example: '#949498'
              image:
                type: string
                example: https://static.deepgram.com/examples/avatars/zeus.jpg
              sample:
                type: string
                example: https://static.deepgram.com/examples/voices/zeus.wav
              tags:
                type: array
                items:
                  type: string
                example:
                  - masculine
    keys:
      type: array
      items:
        type: object
        properties:
          member:
            type: object
            properties:
              member_id:
                type: string
                example: 1000-2000-3000-4000
              email:
                type: string
                example: john@test.com
          api_key:
            type: object
            properties:
              api_key_id:
                type: string
                example: 1234567890abcdef1234567890abcdef
              comment:
                type: string
                example: A comment
              scopes:
                type: array
                items:
                  type: string
                example:
                  - admin
              created:
                type: string
                format: date-time
                example: '2021-01-01T00:00:00Z'
    key_created:
      components:
        responses:
          description: API key created
          content:
            application/json:
              schema:
                type: object
                properties:
                  api_key_id:
                    type: string
                    description: The unique identifier of the API key
                  key:
                    type: string
                    description: The API key
                  comment:
                    type: string
                    description: A comment for the API key
                  scopes:
                    type: array
                    description: the scopes for the API key
                    items:
                      type: string
                  tags:
                    type: array
                    description: the tags for the API key
                    items:
                      type: string
              example:
                api_key_id: 1234567890abcdef1234567890abcdef
                key: 1234567890abcdef1234567890abcdef
                comments: a comment
                scopes:
                  - member
                tags:
                  - tag-1
                expiration_date: '2024-05-01T00:00:00.000000Z'
    key:
      type: object
      properties:
        member:
          type: object
          properties:
            member_id:
              type: string
              example: 1000-2000-3000-4000
            email:
              type: string
              example: john@test.com
            first_name:
              type: string
              example: John
            last_name:
              type: string
              example: Doe
            api_key: null
            type: object
            properties:
              api_key_id:
                type: string
                example: 1234567890abcdef1234567890abcdef
              comment:
                type: string
                example: A comment
              scopes:
                type: array
                items:
                  type: string
                example:
                  - admin
              created:
                type: string
                format: date-time
                example: '2021-01-01T00:00:00Z'
    request:
      components:
        responses:
          request:
            description: A single request
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    request_id:
                      type: string
                      description: The unique identifier of the request
                    project_uuid:
                      type: string
                      description: The unique identifier of the project
                    created:
                      type: string
                      format: date-time
                      description: The date and time the request was created
                    path:
                      type: string
                      description: The API path of the request
                    api_key_id:
                      type: string
                      description: The unique identifier of the API key
                    response:
                      type: object
                      description: The response of the request
                    code:
                      type: integer
                      description: The response code of the request
                    deployment:
                      type: string
                      description: The deployment type
                    callback:
                      type: string
                      description: The callback URL for the request
  responses:
    bad_request:
      components:
        responses:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  err_code:
                    type: string
                    description: The error code
                  err_msg:
                    type: string
                    description: The error message
                  request_id:
                    type: string
                    description: The request ID
                example:
                  err_code: INVALID_QUERY_PARAMETER
                  err_msg: Failed to deserialize query parameters...
                  request_id: 123456-7890-1234-5678-901234
    insufficient_permissions:
      components:
        responses:
          insufficient_permissions:
            description: Insufficient permissions, Model not found
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    err_code:
                      type: string
                      description: The error code
                    err_msg:
                      type: string
                      description: The error message
                    request_id:
                      type: string
                      description: The request ID
                  example:
                    err_code: INSUFFICIENT_PERMISSIONS
                    err_msg: Project does not have access to the requested model.
                    request_id: 123456-7890-1234-5678-901234
    payload_too_large:
      components:
        responses:
          payload_too_large:
            description: Payload too large
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    err_code:
                      type: string
                      description: The error code
                    err_msg:
                      type: string
                      description: The error message
                    request_id:
                      type: string
                      description: The request ID
                  example:
                    err_code: Payload too large
                    err_msg: Input text exceeds maximum character limit of 2000.
                    request_id: 123456-7890-1234-5678-901234
    unsupported_media_type:
      components:
        responses:
          unsupported_media_type:
            description: Unsupported media type
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    err_code:
                      type: string
                      description: The error code
                    err_msg:
                      type: string
                      description: The error message
                    request_id:
                      type: string
                      description: The request ID
                  example:
                    err_code: UNSUPPORTED_MEDIA_TYPE
                    err_msg: Content-Type header is not supported. Content-Type must be either text/plain or application/json.
                    request_id: 123456-7890-1234-5678-901234
    authentication_failed:
      components:
        responses:
          authenticationFailed:
            description: Authentication failed
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    category:
                      type: string
                      description: The category of the error
                    message:
                      type: string
                      description: A message about the error
                    details:
                      type: string
                      description: A description of the error
                    request_id:
                      type: string
                      description: The unique identifier of the request
                example:
                  category: UNAUTHORIZED
                  message: Authentication failed.
                  details: Check that you are using the correct credentials.
                  request_id: 123456-7890-1234-5678-901234
    projects_bad_request:
      components:
        responses:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  category:
                    type: string
                    description: The error category
                  message:
                    type: string
                    description: The error message
                  details:
                    type: string
                    description: Additional details about the error
                  request_id:
                    type: string
                    description: The request ID
                example:
                  category: INVALID_JSON
                  message: Invalid JSON submitted.
                  details: 'Json deserialize error: EOF while parsing a value at line 1 column 0'
                  request_id: 123456-7890-1234-5678-901234
    project_not_found:
      components:
        responses:
          description: Project not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  category:
                    type: string
                    description: The category of the error
                  details:
                    type: string
                    description: A description of the error
                  message:
                    type: string
                    description: A message about the error
                  request_id:
                    type: string
                    description: The unique identifier of the request
              example:
                category: NOT_FOUND
                message: A project with the submitted ID cannot be found.
                details: Check that you have submitted the intended project ID and that the project has not been deleted.
                request_id: 123456-7890-1234-5678-901234
    invalid_request:
      components:
        responses:
          description: Invalid Request
          content:
            text/plain:
              schema:
                type: string
              example: 'Invalid request: scope must be either ''member'', ''admin'' or ''owner''.'
    unauthorized:
      components:
        responses:
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: User does not have sufficient permissions.
    usage:
      components:
        responses:
          description: Usage Summary
          content:
            application/json:
              schema:
                type: object
                properties:
                  start:
                    type: string
                    format: date
                    example: '2024-10-16'
                  end:
                    type: string
                    format: date
                    example: '2024-10-23'
                  resolution:
                    type: object
                    properties:
                      units:
                        type: string
                        example: day
                      amount:
                        type: integer
                        example: 1
                    results:
                      type: array
                      items:
                        type: object
                        properties:
                          start:
                            type: string
                            format: date
                            example: '2024-10-16'
                          end:
                            type: string
                            format: date
                            example: '2024-10-16'
                          hours:
                            type: number
                            format: float
                            example: 1097.4274322222223
                          total_hours:
                            type: number
                            format: float
                            example: 1099.3888366666667
                          requests:
                            type: integer
                            example: 425109
                          tokens:
                            type: object
                            properties:
                              in:
                                type: integer
                                example: 24770
                              out:
                                type: integer
                                example: 7521
                          tts:
                            type: object
                            properties:
                              characters:
                                type: integer
                                example: 9004185
                              requests:
                                type: integer
                                example: 231261
    fields:
      components:
        responses:
          description: A list of fields for a specific project
          content:
            application/json:
              schema:
                type: object
                properties:
                  tags:
                    type: array
                    description: List of tags associated with the project
                    items:
                      type: string
                    example:
                      - tag=dev
                      - tag=production
              models:
                type: array
                description: List of models available for the project.
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: Name of the model.
                      example: 2-medical-nova
                    language:
                      type: string
                      description: The language supported by the model (IETF language tag).
                      example: en-MY
                    version:
                      type: string
                      description: Version identifier of the model, typically with a date and a revision number.
                      example: 2024-05-31.13574
                    model_id:
                      type: string
                      description: Unique identifier for the model.
                      example: 1234567890-12345-67890
              processing_methods:
                type: array
                description: Processing methods supported by the API
                items:
                  type: string
                example:
                  - sync
                  - streaming
              features:
                type: array
                description: API features available to the project
                items:
                  type: string
                example:
                  - alternatives
                  - detect_entities
                  - detect_language
    all_models:
      components:
        responses:
          '200':
            description: A list of all public models
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    stt:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                            example: general
                          canonical_name:
                            type: string
                            example: enhanced-general
                          architecture:
                            type: string
                            example: polaris
                          languages:
                            type: array
                            items:
                              type: string
                            example:
                              - en
                              - en-us
                          version:
                            type: string
                            example: 2022-05-18.1
                          uuid:
                            type: string
                            format: uuid
                            example: c7226e9e-ae1c-4057-ae2a-a71a6b0dc588
                          batch:
                            type: boolean
                            example: true
                          streaming:
                            type: boolean
                            example: true
                          formatted_output:
                            type: boolean
                            example: false
                    tts:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                            example: angus
                          canonical_name:
                            type: string
                            example: aura-angus-en
                          architecture:
                            type: string
                            example: aura
                          languages:
                            type: array
                            items:
                              type: string
                            example:
                              - en
                              - en-us
                          version:
                            type: string
                            example: 2024-07-30.0
                          uuid:
                            type: string
                            format: uuid
                            example: eed36e9e-37aa-40a3-91fa-a2911e73a5da
                          metadata:
                            type: object
                            properties:
                              accent:
                                type: string
                                example: Irish
                              color:
                                type: string
                                example: '#BA80F5'
                              image:
                                type: string
                                format: uri
                                example: https://static.deepgram.com/examples/avatars/angus.jpg
                              sample:
                                type: string
                                format: uri
                                example: https://static.deepgram.com/examples/voices/angus.wav
                              tags:
                                type: array
                                items:
                                  type: string
                                example:
                                  - masculine
    model:
      components:
        responses:
          '200':
            description: A model object that can be either STT or TTS
            content:
              application/json:
                schema:
                  oneOf:
                    - type: object
                      properties:
                        name:
                          type: string
                          example: general
                        canonical_name:
                          type: string
                          example: enhanced-general
                        architecture:
                          type: string
                          example: polaris
                        languages:
                          type: array
                          items:
                            type: string
                          example:
                            - en
                            - en-us
                        version:
                          type: string
                          example: 2022-05-18.1
                        uuid:
                          type: string
                          format: uuid
                          example: c7226e9e-ae1c-4057-ae2a-a71a6b0dc588
                        batch:
                          type: boolean
                          example: true
                        streaming:
                          type: boolean
                          example: true
                        formatted_output:
                          type: boolean
                          example: false
                    - type: object
                      properties:
                        name:
                          type: string
                          example: angus
                        canonical_name:
                          type: string
                          example: aura-angus-en
                        architecture:
                          type: string
                          example: aura
                        languages:
                          type: array
                          items:
                            type: string
                          example:
                            - en
                            - en-us
                        version:
                          type: string
                          example: 2024-07-30.0
                        uuid:
                          type: string
                          format: uuid
                          example: eed36e9e-37aa-40a3-91fa-a2911e73a5da
                        metadata:
                          type: object
                          properties:
                            accent:
                              type: string
                              example: Irish
                            color:
                              type: string
                              example: '#BA80F5'
                            image:
                              type: string
                              format: uri
                              example: https://static.deepgram.com/examples/avatars/angus.jpg
                            sample:
                              type: string
                              format: uri
                              example: https://static.deepgram.com/examples/voices/angus.wav
                            tags:
                              type: array
                              items:
                                type: string
                              example:
                                - masculine
    credentials:
      components:
        responses:
          description: List of distribution credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  distribution_credentials:
                    type: array
                    description: Array of distribution credentials with associated member information
                    items:
                      type: object
                      required:
                        - member
                        - distribution_credentials
                      properties:
                        member:
                          type: object
                          required:
                            - member_id
                            - email
                          properties:
                            member_id:
                              type: string
                              format: uuid
                              description: Unique identifier for the member
                              example: 3376abcd-8e5e-49d3-92d4-876d3a4f0363
                            email:
                              type: string
                              format: email
                              description: Email address of the member
                              example: email@example.com
                        distribution_credentials:
                          type: object
                          required:
                            - distribution_credentials_id
                            - provider
                            - scopes
                            - created
                          properties:
                            distribution_credentials_id:
                              type: string
                              format: uuid
                              description: Unique identifier for the distribution credentials
                              example: 8b36cfd0-472f-4a21-833f-2d6343c3a2f3
                            provider:
                              type: string
                              description: The provider of the distribution service
                              example: quay
                            comment:
                              type: string
                              description: Optional comment about the credentials
                              example: My Self-Hosted Distribution Credentials
                            scopes:
                              type: array
                              description: List of permission scopes for the credentials
                              items:
                                type: string
                              example:
                                - self-hosted:product:api
                                - self-hosted:product:engine
                            created:
                              type: string
                              format: date-time
                              description: Timestamp when the credentials were created
                              example: '2023-06-28T15:36:59.609841Z'
    credential:
      components:
        responses:
          description: Single distribution credential
          content:
            application/json:
              schema:
                type: object
                required:
                  - member
                  - distribution_credentials
                properties:
                  member:
                    type: object
                    required:
                      - member_id
                      - email
                    properties:
                      member_id:
                        type: string
                        format: uuid
                        description: Unique identifier for the member
                        example: c7b9b131-73f3-11d9-8665-0b00d2e44b83
                      email:
                        type: string
                        format: email
                        description: Email address of the member
                        example: email@example.com
                  distribution_credentials:
                    type: object
                    required:
                      - distribution_credentials_id
                      - provider
                      - scopes
                      - created
                    properties:
                      distribution_credentials_id:
                        type: string
                        format: uuid
                        description: Unique identifier for the distribution credentials
                        example: 82c32c10-53b2-4d23-993f-864b3d44502a
                      provider:
                        type: string
                        description: The provider of the distribution service
                        example: quay
                      comment:
                        type: string
                        description: Optional comment about the credentials
                        example: My Self-Hosted Distribution Credentials
                      scopes:
                        type: array
                        description: List of permission scopes for the credentials
                        items:
                          type: string
                        example:
                          - self-hosted:product:api
                          - self-hosted:product:engine
                      created:
                        type: string
                        format: date-time
                        description: Timestamp when the credentials were created
                        example: '2023-06-28T15:36:59.609841Z'
