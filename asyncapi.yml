asyncapi: 3.0.0
info:
  title: Deepgram API Specification
  version: 1.0.0
  description: |
    APIs for speech-to-text transcription, text-to-speech synthesis, language understanding, and account management.
  termsOfService: 'https://deepgram.com/terms/'
  contact:
    email: devrel@deepgram.com
    url: 'https://community.deepgram.com'
    name: Deepgram Developer Relations
  license:
    name: Privacy Notice
    url: 'https://deepgram.com/privacy/'
  externalDocs:
    description: Visit our docs to learn more about using Deepgram APIs
    url: 'https://developers.deepgram.com'
  tags:
    - name: Listen
      description: Speech-to-text transcription
    - name: Read
      description: Text analysis
    - name: Speak
      description: Text-to-speech generation
    - name: Agent
      description: Conversational voice agent
    - name: experimental
      description: Experimental features
servers:
  production:
    host: api.deepgram.com
    protocol: wss
    x-fern-server-name: Production
    security:
      - $ref: '#/components/securitySchemes/ApiKeyAuth'
      - $ref: '#/components/securitySchemes/JwtAuth'
  agent:
    host: agent.deepgram.com
    protocol: wss
    x-fern-server-name: Agent
    security:
      - $ref: '#/components/securitySchemes/ApiKeyAuth'
      - $ref: '#/components/securitySchemes/JwtAuth'
channels:
  SpeakV1:
    x-dg-public: true
    x-fern-sdk-group-name: speak
    address: /v1/speak
    description: Convert text into natural-sounding speech using Deepgram's TTS WebSocket
    servers:
      - $ref: '#/servers/production'
    bindings:
      ws:
        query:
          properties:
            encoding:
              description: Encoding allows you to specify the expected encoding of your audio output for streaming TTS. Only streaming-compatible encodings are supported.
              default: linear16
              enum:
                - linear16
                - mulaw
                - alaw
              examples:
                - linear16
            mip_opt_out:
              description: 'Opts out requests from the Deepgram Model Improvement Program. Refer to our Docs for pricing impacts before setting this to true. https://dpgr.am/deepgram-mip'
              default: 'false'
              examples:
                - 'true'
                - 'false'
            model:
              description: AI model used to process submitted text
              default: aura-asteria-en
              enum:
                - aura-asteria-en
                - aura-luna-en
                - aura-stella-en
                - aura-athena-en
                - aura-hera-en
                - aura-orion-en
                - aura-arcas-en
                - aura-perseus-en
                - aura-angus-en
                - aura-orpheus-en
                - aura-helios-en
                - aura-zeus-en
                - aura-2-amalthea-en
                - aura-2-andromeda-en
                - aura-2-apollo-en
                - aura-2-arcas-en
                - aura-2-aries-en
                - aura-2-asteria-en
                - aura-2-athena-en
                - aura-2-atlas-en
                - aura-2-aurora-en
                - aura-2-callista-en
                - aura-2-cordelia-en
                - aura-2-cora-en
                - aura-2-delia-en
                - aura-2-draco-en
                - aura-2-electra-en
                - aura-2-harmonia-en
                - aura-2-helena-en
                - aura-2-hera-en
                - aura-2-hermes-en
                - aura-2-hyperion-en
                - aura-2-iris-en
                - aura-2-janus-en
                - aura-2-juno-en
                - aura-2-jupiter-en
                - aura-2-luna-en
                - aura-2-mars-en
                - aura-2-minerva-en
                - aura-2-neptune-en
                - aura-2-odysseus-en
                - aura-2-ophelia-en
                - aura-2-orion-en
                - aura-2-orpheus-en
                - aura-2-pandora-en
                - aura-2-phoebe-en
                - aura-2-pluto-en
                - aura-2-saturn-en
                - aura-2-selene-en
                - aura-2-thalia-en
                - aura-2-theia-en
                - aura-2-vesta-en
                - aura-2-zeus-en
                - aura-2-sirio-es
                - aura-2-nestor-es
                - aura-2-carina-es
                - aura-2-celeste-es
                - aura-2-alvaro-es
                - aura-2-diana-es
                - aura-2-aquila-es
                - aura-2-selena-es
                - aura-2-estrella-es
                - aura-2-javier-es
              examples:
                - aura-2-thalia-en
            sample_rate:
              description: Sample Rate specifies the sample rate for the output audio. Based on encoding 8000 or 24000 are possible defaults. For some encodings sample rate is not configurable.
              default: '24000'
              enum:
                - '8000'
                - '16000'
                - '24000'
                - '44100'
                - '48000'
              examples:
                - '24000'
              x-fern-enum:
                '8000':
                  name: EightThousand
                '16000':
                  name: SixteenThousand
                '24000':
                  name: TwentyFourThousand
                '44100':
                  name: FortyFourThousandOneHundred
                '48000':
                  name: FortyEightThousand
          type: object
    messages:
      SpeakV1Text:
        name: SpeakV1TextMessage
        description: Request to convert text to speech
        payload:
          type: object
          properties:
            type:
              description: Message type identifier
              type: string
              example: Speak
              enum:
                - Speak
            text:
              description: The input text to be converted to speech
              type: string
              example: 'Hello, world!'
          required:
            - type
            - text
      SpeakV1Flush:
        name: SpeakV1ControlMessage
        description: Control messages for managing the Text to Speech WebSocket connection
        payload:
          type: object
          properties:
            type:
              description: Message type identifier
              type: string
              enum:
                - Flush
                - Clear
                - Close
          required:
            - type
      SpeakV1Clear:
        $ref: '#/channels/SpeakV1/messages/SpeakV1Flush'
      SpeakV1Close:
        $ref: '#/channels/SpeakV1/messages/SpeakV1Flush'
      SpeakV1Audio:
        name: SpeakV1AudioChunkEvent
        description: Audio data in the format specified by the request parameters
        contentType: application/octet-stream
        payload:
          type: string
          format: binary
      SpeakV1Metadata:
        name: SpeakV1MetadataEvent
        description: Metadata sent after the WebSocket handshake
        payload:
          type: object
          properties:
            type:
              description: Message type identifier
              type: string
              enum:
                - Metadata
            request_id:
              description: Unique identifier for the request
              type: string
              format: uuid
            model_name:
              description: Name of the model being used
              type: string
            model_version:
              description: Version of the model being used
              type: string
            model_uuid:
              description: Unique identifier for the model
              type: string
              format: uuid
          required:
            - type
            - request_id
            - model_name
            - model_version
            - model_uuid
      SpeakV1Flushed:
        name: SpeakV1ControlEvent
        payload:
          type: object
          properties:
            type:
              description: Message type identifier
              type: string
              enum:
                - Flushed
                - Cleared
            sequence_id:
              description: The sequence ID of the response
              type: integer
          required:
            - type
            - sequence_id
      SpeakV1Cleared:
        $ref: '#/channels/SpeakV1/messages/SpeakV1Flushed'
      SpeakV1Warning:
        name: SpeakV1WarningEvent
        payload:
          type: object
          properties:
            type:
              description: Message type identifier
              type: string
              enum:
                - Warning
            description:
              description: A description of what went wrong
              type: string
            code:
              description: Error code identifying the type of error
              type: string
          required:
            - type
            - description
            - code
  ListenV1:
    x-dg-public: true
    x-fern-sdk-group-name: listen
    address: /v1/listen
    description: Transcribe audio and video using Deepgram's speech-to-text WebSocket
    servers:
      - $ref: '#/servers/production'
    bindings:
      ws:
        query:
          properties:
            callback:
              description: URL to which we'll make the callback request
              examples:
                - 'https://example.com'
            callback_method:
              description: HTTP method by which the callback request will be made
              default: POST
              enum:
                - POST
                - GET
                - PUT
                - DELETE
              examples:
                - POST
                - GET
                - PUT
                - DELETE
            channels:
              description: The number of channels in the submitted audio
              default: '1'
              examples:
                - '1'
            diarize:
              description: Defaults to `false`. Recognize speaker changes. Each word in the transcript will be assigned a speaker number starting at 0
              default: 'false'
              enum:
                - 'true'
                - 'false'
              examples:
                - 'true'
            dictation:
              description: Identify and extract key entities from content in submitted audio
              default: 'false'
              enum:
                - 'true'
                - 'false'
              examples:
                - 'true'
            encoding:
              description: Specify the expected encoding of your submitted audio
              enum:
                - linear16
                - linear32
                - flac
                - alaw
                - mulaw
                - amr-nb
                - amr-wb
                - opus
                - ogg-opus
                - speex
                - g729
              examples:
                - linear16
            endpointing:
              description: 'Indicates how long Deepgram will wait to detect whether a speaker has finished speaking or pauses for a significant period of time. When set to a value, the streaming endpoint immediately finalizes the transcription for the processed time range and returns the transcript with a speech_final parameter set to true. Can also be set to false to disable endpointing'
              default: '10'
              examples:
                - '300'
                - 'false'
            extra:
              description: Arbitrary key-value pairs that are attached to the API response for usage in downstream processing
              examples:
                - 'key:value'
            filler_words:
              description: 'Filler Words can help transcribe interruptions in your audio, like "uh" and "um"'
              default: 'false'
              enum:
                - 'true'
                - 'false'
              examples:
                - 'true'
            interim_results:
              description: 'Specifies whether the streaming endpoint should provide ongoing transcription updates as more audio is received. When set to true, the endpoint sends continuous updates, meaning transcription results may evolve over time'
              default: 'false'
              enum:
                - 'true'
                - 'false'
              examples:
                - 'true'
            keyterm:
              description: Key term prompting can boost specialized terminology and brands. Only compatible with Nova-3
              examples:
                - Snuffleupagus
            keywords:
              description: Keywords can boost or suppress specialized terminology and brands
              examples:
                - 'Twilio:2'
            language:
              description: 'The [BCP-47 language tag](https://tools.ietf.org/html/bcp47) that hints at the primary spoken language. Depending on the Model you choose only certain languages are available'
              default: en
              enum:
                - bg
                - ca
                - cs
                - da
                - da-DK
                - de
                - de-CH
                - el
                - en
                - en-AU
                - en-GB
                - en-IN
                - en-NZ
                - en-US
                - es
                - es-419
                - es-LATAM
                - et
                - fi
                - fr
                - fr-CA
                - hi
                - hi-Latn
                - hu
                - id
                - it
                - ja
                - ko
                - ko-KR
                - lt
                - lv
                - ms
                - multi
                - nl
                - nl-BE
                - 'no'
                - pl
                - pt
                - pt-BR
                - pt-PT
                - ro
                - ru
                - sk
                - sv
                - sv-SE
                - taq
                - th
                - th-TH
                - tr
                - uk
                - vi
                - zh
                - zh-CN
                - zh-HK
                - zh-Hans
                - zh-Hant
                - zh-TW
              examples:
                - en
            mip_opt_out:
              description: 'Opts out requests from the Deepgram Model Improvement Program. Refer to our Docs for pricing impacts before setting this to true. https://dpgr.am/deepgram-mip'
              default: 'false'
              examples:
                - 'true'
                - 'false'
            model:
              description: AI model to use for the transcription
              enum:
                - nova-3
                - nova-3-general
                - nova-3-medical
                - nova-2
                - nova-2-general
                - nova-2-meeting
                - nova-2-finance
                - nova-2-conversationalai
                - nova-2-voicemail
                - nova-2-video
                - nova-2-medical
                - nova-2-drivethru
                - nova-2-automotive
                - nova
                - nova-general
                - nova-phonecall
                - nova-medical
                - enhanced
                - enhanced-general
                - enhanced-meeting
                - enhanced-phonecall
                - enhanced-finance
                - base
                - meeting
                - phonecall
                - finance
                - conversationalai
                - voicemail
                - video
                - custom
              examples:
                - nova-2
                - custom model name
            multichannel:
              description: Transcribe each audio channel independently
              default: 'false'
              enum:
                - 'true'
                - 'false'
              examples:
                - 'true'
            numerals:
              description: Convert numbers from written format to numerical format
              default: 'false'
              enum:
                - 'true'
                - 'false'
              examples:
                - 'true'
            profanity_filter:
              description: Profanity Filter looks for recognized profanity and converts it to the nearest recognized non-profane word or removes it from the transcript completely
              default: 'false'
              enum:
                - 'true'
                - 'false'
              examples:
                - 'true'
            punctuate:
              description: Add punctuation and capitalization to the transcript
              default: 'false'
              enum:
                - 'true'
                - 'false'
              examples:
                - 'true'
            redact:
              description: Redaction removes sensitive information from your transcripts
              default: 'false'
              enum:
                - 'true'
                - 'false'
                - pci
                - numbers
                - aggressive_numbers
                - ssn
              examples:
                - 'true'
            replace:
              description: Search for terms or phrases in submitted audio and replaces them
              examples:
                - 'monika:Monica'
            sample_rate:
              description: Sample rate of submitted audio. Required (and only read) when a value is provided for encoding
              examples:
                - '8000'
            search:
              description: Search for terms or phrases in submitted audio
              examples:
                - Deepgram
                - Text to Speech
            smart_format:
              description: 'Apply formatting to transcript output. When set to true, additional formatting will be applied to transcripts to improve readability'
              default: 'false'
              enum:
                - 'true'
                - 'false'
              examples:
                - 'true'
            tag:
              description: Label your requests for the purpose of identification during usage reporting
              examples:
                - my-team
                - marketing%20team
            utterance_end_ms:
              description: Indicates how long Deepgram will wait to send an UtteranceEnd message after a word has been transcribed. Use with interim_results
              examples:
                - '1000'
            vad_events:
              description: Indicates that speech has started. You'll begin receiving Speech Started messages upon speech starting
              default: 'false'
              enum:
                - 'true'
                - 'false'
              examples:
                - 'true'
            version:
              description: Version of an AI model to use
              default: latest
              examples:
                - MODEL_VERSION
          type: object
    messages:
      ListenV1Media:
        name: ListenV1MediaMessage
        description: Audio data is transmitted as raw binary WebSocket messages
        contentType: application/octet-stream
        payload:
          type: string
          format: binary
      ListenV1Finalize:
        name: ListenV1ControlMessage
        description: Control messages for managing the Speech to Text WebSocket connection
        payload:
          type: object
          properties:
            type:
              description: Message type identifier
              type: string
              enum:
                - Finalize
                - CloseStream
                - KeepAlive
          required:
            - type
      ListenV1CloseStream:
        $ref: '#/channels/ListenV1/messages/ListenV1Finalize'
      ListenV1KeepAlive:
        $ref: '#/channels/ListenV1/messages/ListenV1Finalize'
      ListenV1Results:
        name: ListenV1ResultsEvent
        description: Deepgram has responded with a transcription
        payload:
          type: object
          properties:
            type:
              description: Message type identifier
              type: string
              enum:
                - Results
            channel_index:
              description: The index of the channel
              type: array
              items:
                type: integer
            duration:
              description: The duration of the transcription
              type: number
            start:
              description: The start time of the transcription
              type: number
            is_final:
              description: Whether the transcription is final
              type: boolean
            speech_final:
              description: Whether the transcription is speech final
              type: boolean
            channel:
              type: object
              properties:
                alternatives:
                  type: array
                  items:
                    type: object
                    properties:
                      transcript:
                        description: The transcript of the transcription
                        type: string
                      confidence:
                        description: The confidence of the transcription
                        type: number
                      languages:
                        type: array
                        items:
                          type: string
                          description: The languages of the transcription
                      words:
                        type: array
                        items:
                          type: object
                          properties:
                            word:
                              description: The word of the transcription
                              type: string
                            start:
                              description: The start time of the word
                              type: number
                            end:
                              description: The end time of the word
                              type: number
                            confidence:
                              description: The confidence of the word
                              type: number
                            language:
                              description: The language of the word
                              type: string
                            punctuated_word:
                              description: The punctuated word of the word
                              type: string
                            speaker:
                              description: The speaker of the word
                              type: integer
                          required:
                            - word
                            - start
                            - end
                            - confidence
                            - language
                            - punctuated_word
                    required:
                      - transcript
                      - confidence
                      - languages
                      - words
              required:
                - alternatives
            metadata:
              type: object
              properties:
                request_id:
                  description: The request ID
                  type: string
                model_info:
                  type: object
                  properties:
                    name:
                      description: The name of the model
                      type: string
                    version:
                      description: The version of the model
                      type: string
                    arch:
                      description: The arch of the model
                      type: string
                  required:
                    - name
                    - version
                    - arch
                model_uuid:
                  description: The model UUID
                  type: string
              required:
                - request_id
                - model_info
                - model_uuid
            from_finalize:
              description: Whether the transcription is from a finalize message
              type: boolean
          required:
            - type
            - channel_index
            - duration
            - start
            - channel
            - metadata
      ListenV1Metadata:
        name: ListenV1MetadataEvent
        description: Metadata event - these are usually information describing the connection
        payload:
          type: object
          properties:
            type:
              description: Message type identifier
              type: string
              enum:
                - Metadata
            transaction_key:
              description: The transaction key
              type: string
              deprecated: true
            request_id:
              description: The request ID
              type: string
              format: uuid
            sha256:
              description: The sha256
              type: string
            created:
              description: The created
              type: string
            duration:
              description: The duration
              type: number
            channels:
              description: The channels
              type: number
          required:
            - type
            - transaction_key
            - request_id
            - sha256
            - created
            - duration
            - channels
      ListenV1UtteranceEnd:
        name: ListenV1UtteranceEndEvent
        description: An utterance has ended
        payload:
          type: object
          properties:
            type:
              description: Message type identifier
              type: string
              enum:
                - UtteranceEnd
            channel:
              description: The channel
              type: array
              items:
                type: integer
            last_word_end:
              description: The last word end
              type: number
          required:
            - type
            - channel
            - last_word_end
      ListenV1SpeechStarted:
        name: ListenV1SpeechStartedEvent
        description: |
          `vad_events` is true and speech has been detected
        payload:
          type: object
          properties:
            type:
              description: Message type identifier
              type: string
              enum:
                - SpeechStarted
            channel:
              description: The channel
              type: array
              items:
                type: integer
            timestamp:
              description: The timestamp
              type: number
          required:
            - type
            - channel
            - timestamp
  ListenV2:
    x-fern-sdk-group-name:
      - listen
      - v2
    address: /v2/listen
    description: |
      Real-time conversational speech recognition with contextual turn detection
      for natural voice conversations
    servers:
      - $ref: '#/servers/production'
    bindings:
      ws:
        query:
          properties:
            model:
              description: Defines the AI model used to process submitted audio.
              enum:
                - flux-general-en
              examples:
                - flux-general-en
            encoding:
              description: Encoding of the audio stream. Currently only supports raw signed little-endian 16-bit PCM.
              default: linear16
              enum:
                - linear16
              examples:
                - linear16
            sample_rate:
              description: Sample rate of the audio stream in Hz.
              examples:
                - '16000'
            eager_eot_threshold:
              description: |
                End-of-turn confidence required to fire an eager end-of-turn event.
                When set, enables `EagerEndOfTurn` and `TurnResumed` events. Valid
                Values 0.3 - 0.9.
              examples:
                - '0.4'
                - '0.5'
                - '0.6'
            eot_threshold:
              description: |
                End-of-turn confidence required to finish a turn. Valid Values 0.5 -
                0.9.
              default: '0.7'
              examples:
                - '0.5'
                - '0.7'
                - '0.8'
                - '0.9'
            eot_timeout_ms:
              description: |
                A turn will be finished when this much time has passed after speech,
                regardless of EOT confidence.
              default: '5000'
            keyterm:
              description: |
                Keyterm prompting can improve recognition of specialized terminology.
                Pass multiple keyterm query parameters to boost multiple keyterms.
              examples:
                - Snuffleupagus
                - - Snuffleupagus
                  - BigBird
                  - OscarTheGrouch
              oneOf:
                - type: string
                - type: array
                  items:
                    type: string
            mip_opt_out:
              description: |
                Opts out requests from the Deepgram Model Improvement Program. Refer
                to our Docs for pricing impacts before setting this to true.
                https://dpgr.am/deepgram-mip
              examples:
                - 'true'
            tag:
              description: |
                Label your requests for the purpose of identification during usage
                reporting
              examples:
                - production
                - staging
                - client-xyz
          type: object
    messages:
      ListenV2Media:
        name: ListenV2MediaMessage
        description: Audio data is transmitted as raw binary WebSocket messages
        contentType: application/octet-stream
        payload:
          type: string
          format: binary
      ListenV2CloseStream:
        name: ListenV2ControlMessage
        description: Control messages for managing the Speech to Text WebSocket connection
        payload:
          type: object
          properties:
            type:
              description: Message type identifier
              type: string
              enum:
                - Finalize
                - CloseStream
                - KeepAlive
          required:
            - type
      ListenV2Connected:
        name: ListenV2ConnectedEvent
        description: 'This message is sent at the start of each connection, indicating the connection is active.'
        payload:
          type: object
          required:
            - type
            - request_id
            - sequence_id
          properties:
            type:
              description: Message type identifier
              type: string
              enum:
                - Connected
            request_id:
              description: The unique identifier of the request
              type: string
              format: uuid
            sequence_id:
              description: |
                Starts at `0` and increments for each message the server sends
                to the client.  This includes messages of other types, like
                `TurnInfo` messages.
              type: integer
              minimum: 0
      ListenV2TurnInfo:
        contentType: application/json
        payload:
          type: object
          description: Describes the current turn and latest state of the turn
          required:
            - type
            - request_id
            - sequence_id
            - event
            - turn_index
            - audio_window_start
            - audio_window_end
            - transcript
            - words
            - end_of_turn_confidence
          properties:
            type:
              type: string
              const: TurnInfo
            request_id:
              description: The unique identifier of the request
              type: string
              format: uuid
            sequence_id:
              description: |
                Starts at `0` and increments for each message the server sends to the client.  This includes messages of other types, like `Connected` messages.
              type: integer
              minimum: 0
            event:
              description: |
                The type of event being reported.

                - **Update** - Additional audio has been transcribed, but the turn state hasn't changed
                - **StartOfTurn** - The user has begun speaking for the first time in the turn
                - **EagerEndOfTurn** - The system has moderate confidence that the user has finished speaking for the turn. This is an opportunity to begin preparing an agent reply
                - **TurnResumed** - The system detected that speech had ended and therefore sent an **EagerEndOfTurn** event, but speech is actually continuing for this turn
                - **EndOfTurn** - The user has finished speaking for the turn
              type: string
              enum:
                - Update
                - StartOfTurn
                - EagerEndOfTurn
                - TurnResumed
                - EndOfTurn
            turn_index:
              description: The index of the current turn
              type: integer
              minimum: 0
            audio_window_start:
              description: Start time in seconds of the audio range that was transcribed
              type: number
              format: float
              minimum: 0
            audio_window_end:
              description: End time in seconds of the audio range that was transcribed
              type: number
              format: float
              minimum: 0
            transcript:
              description: Text that was said over the course of the current turn
              type: string
            words:
              description: The words in the `transcript`
              type: array
              items:
                type: object
                required:
                  - word
                  - confidence
                properties:
                  word:
                    description: 'The individual punctuated, properly-cased word from the transcript'
                    type: string
                  confidence:
                    description: Confidence that this word was transcribed correctly
                    type: number
                    format: float
                    maximum: 1
                    minimum: 0
            end_of_turn_confidence:
              description: Confidence that no more speech is coming in this turn
              type: number
              format: float
              maximum: 1
              minimum: 0
        examples:
          - payload:
              type: TurnInfo
              request_id: ad12514a-0d38-4f7e-8fba-cce10d8f174c
              sequence_id: 1
              event: StartOfTurn
              turn_index: 0
              audio_window_start: 0
              audio_window_end: 0.1
              transcript: Hello
              words:
                - word: Hello
                  confidence: 0.8
              end_of_turn_confidence: 0.12
          - payload:
              type: TurnInfo
              request_id: ad12514a-0d38-4f7e-8fba-cce10d8f174c
              sequence_id: 8
              event: Update
              turn_index: 0
              audio_window_start: 0
              audio_window_end: 0.6
              transcript: 'Hello, how are'
              words:
                - word: 'Hello,'
                  confidence: 0.96
                - word: how
                  confidence: 0.94
                - word: are
                  confidence: 0.97
              end_of_turn_confidence: 0.05
          - payload:
              type: TurnInfo
              request_id: ad12514a-0d38-4f7e-8fba-cce10d8f174c
              sequence_id: 11
              event: EndOfTurn
              turn_index: 0
              audio_window_start: 0
              audio_window_end: 1.3
              transcript: 'Hello, how are you?'
              words:
                - word: 'Hello,'
                  confidence: 0.96
                - word: how
                  confidence: 0.94
                - word: are
                  confidence: 0.97
                - word: you?
                  confidence: 0.92
              end_of_turn_confidence: 0.86
      ListenV2FatalError:
        name: ListenV2FatalErrorEvent
        description: Receive an error message from the server when a fatal error occurs
        payload:
          type: object
          required:
            - type
            - sequence_id
            - description
            - code
          properties:
            type:
              description: Message type identifier
              type: string
              enum:
                - Error
            sequence_id:
              description: |
                Starts at `0` and increments for each message the server sends
                to the client.  This includes messages of other types, like
                `Connected` messages.
              type: integer
              minimum: 0
            code:
              description: 'A string code describing the error, e.g. `INTERNAL_SERVER_ERROR`'
              type: string
            description:
              description: Prose description of the error
              type: string
  AgentV1:
    x-dg-public: true
    x-fern-sdk-group-name: agent
    address: /v1/agent/converse
    servers:
      - $ref: '#/servers/agent'
    description: Build a conversational voice agent using Deepgram's Voice Agent WebSocket
    messages:
      AgentV1Media:
        name: AgentV1MediaMessage
        description: Raw binary audio data sent to the Voice Agent for processing
        contentType: application/octet-stream
        payload:
          type: string
          format: binary
      AgentV1Audio:
        name: AgentV1AudioChunkEvent
        description: Raw binary audio data generated by the Voice Agent and sent to the client
        contentType: application/octet-stream
        payload:
          type: string
          format: binary
      AgentV1Welcome:
        description: Confirms that the WebSocket connection has been successfully opened
        payload:
          type: object
          properties:
            type:
              description: Message type identifier for welcome message
              type: string
              const: Welcome
            request_id:
              description: Unique identifier for the request
              type: string
          required:
            - type
            - request_id
      AgentV1SettingsApplied:
        description: Confirm the server has successfully received and applied the Settings message
        payload:
          type: object
          properties:
            type:
              description: Message type identifier for settings applied confirmation
              type: string
              const: SettingsApplied
          required:
            - type
      AgentV1ConversationText:
        description: Facilitate real-time communication by relaying spoken statements from both the user and the assistant
        payload:
          type: object
          properties:
            type:
              description: Message type identifier for conversation text
              type: string
              const: ConversationText
            role:
              description: Identifies who spoke the statement
              type: string
              enum:
                - user
                - assistant
            content:
              description: The actual statement that was spoken
              type: string
          required:
            - type
            - role
            - content
      AgentV1UserStartedSpeaking:
        description: Notify the client that the user has begun speaking
        payload:
          type: object
          properties:
            type:
              description: Message type identifier indicating that the user has begun speaking
              type: string
              const: UserStartedSpeaking
          required:
            - type
      AgentV1AgentThinking:
        description: Inform the client when the agent is processing information
        payload:
          type: object
          properties:
            type:
              description: Message type identifier for agent thinking
              type: string
              const: AgentThinking
            content:
              description: The text of the agent's thought process
              type: string
          required:
            - type
            - content
      AgentV1FunctionCallRequest:
        name: AgentV1FunctionCallRequestEvent
        description: Client-side or server-side function call request sent by the server
        payload:
          type: object
          properties:
            type:
              description: Message type identifier for function call requests
              type: string
              const: FunctionCallRequest
            functions:
              description: Array of functions to be called
              type: array
              items:
                type: object
                required:
                  - id
                  - name
                  - arguments
                  - client_side
                properties:
                  id:
                    description: Unique identifier for the function call
                    type: string
                  name:
                    description: The name of the function to call
                    type: string
                  arguments:
                    description: JSON string containing the function arguments
                    type: string
                  client_side:
                    description: Whether the function should be executed client-side
                    type: boolean
          required:
            - type
            - functions
      AgentV1AgentStartedSpeaking:
        name: AgentV1AgentStartedSpeakingEvent
        description: Get notified when the server begins streaming an agent's audio response for playback. This message is only sent when the experimental flag is enabled
        payload:
          type: object
          properties:
            type:
              description: Message type identifier for agent started speaking
              type: string
              const: AgentStartedSpeaking
            total_latency:
              description: Seconds from receiving the user's utterance to producing the agent's reply
              type: number
              format: float
            tts_latency:
              description: The portion of total latency attributable to text-to-speech
              type: number
              format: float
            ttt_latency:
              description: The portion of total latency attributable to text-to-text (usually an LLM)
              type: number
              format: float
          required:
            - type
            - total_latency
            - tts_latency
            - ttt_latency
      AgentV1AgentAudioDone:
        name: AgentV1AgentAudioDoneEvent
        description: Get signals that the server has finished sending the final audio segment to the client
        payload:
          type: object
          properties:
            type:
              description: Message type identifier indicating the agent has finished sending audio
              type: string
              const: AgentAudioDone
          required:
            - type
      AgentV1Error:
        name: AgentV1ErrorEvent
        description: Receive an error message from the server when an error occurs
        payload:
          type: object
          properties:
            type:
              description: Message type identifier for error responses
              type: string
              enum:
                - Error
            description:
              description: A description of what went wrong
              type: string
            code:
              description: Error code identifying the type of error
              type: string
          required:
            - type
            - description
            - code
      AgentV1Warning:
        name: AgentV1WarningEvent
        description: Notifies the client of non-fatal errors or warnings
        payload:
          type: object
          description: Notifies the client of non-fatal errors or warnings
          properties:
            type:
              description: Message type identifier for warnings
              type: string
              enum:
                - Warning
            description:
              description: Description of the warning
              type: string
            code:
              description: Warning code identifier
              type: string
          required:
            - type
            - description
            - code
      AgentV1PromptUpdated:
        name: AgentV1PromptUpdatedEvent
        description: Confirms that an UpdatePrompt message from the client has been applied
        payload:
          type: object
          properties:
            type:
              description: Message type identifier for prompt update confirmation
              type: string
              const: PromptUpdated
          required:
            - type
      AgentV1SpeakUpdated:
        name: AgentV1SpeakUpdatedEvent
        description: Confirms that an UpdateSpeak message from the client has been applied
        payload:
          type: object
          properties:
            type:
              description: Message type identifier for speak update confirmation
              type: string
              const: SpeakUpdated
          required:
            - type
      AgentV1InjectionRefused:
        description: Receive injection refused message
        payload:
          type: object
          properties:
            type:
              description: Message type identifier for injection refused
              type: string
              const: InjectionRefused
            message:
              description: Details about why the injection was refused
              type: string
          required:
            - type
            - message
      AgentV1Settings:
        name: AgentV1SettingsMessage
        description: Configure the voice agent and sets the input and output audio formats
        payload:
          type: object
          properties:
            type:
              type: string
              const: Settings
            tags:
              description: Tags to associate with the request
              type: array
              items:
                type: string
                description: A tag associated with the request can be used for filtered searching
            experimental:
              description: To enable experimental features
              type: boolean
              default: false
            flags:
              type: object
              properties:
                history:
                  description: Enable or disable history message reporting
                  type: boolean
                  default: true
            mip_opt_out:
              description: To opt out of Deepgram Model Improvement Program
              type: boolean
              default: false
            audio:
              type: object
              properties:
                input:
                  description: 'Audio input configuration settings. If omitted, defaults to encoding=linear16 and sample_rate=24000. Higher sample rates like 44100 Hz provide better audio quality.'
                  type: object
                  properties:
                    encoding:
                      description: Audio encoding format
                      type: string
                      default: linear16
                      enum:
                        - linear16
                        - linear32
                        - flac
                        - alaw
                        - mulaw
                        - amr-nb
                        - amr-wb
                        - opus
                        - ogg-opus
                        - speex
                        - g729
                    sample_rate:
                      description: 'Sample rate in Hz. Common values are 16000, 24000, 44100, 48000'
                      type: integer
                      default: 24000
                  required:
                    - encoding
                    - sample_rate
                output:
                  description: Audio output configuration settings
                  type: object
                  properties:
                    encoding:
                      description: Audio encoding format for streaming TTS output
                      type: string
                      default: linear16
                      enum:
                        - linear16
                        - mulaw
                        - alaw
                    sample_rate:
                      description: Sample rate in Hz
                      type: integer
                    bitrate:
                      description: Audio bitrate in bits per second
                      type: integer
                    container:
                      description: 'Audio container format. If omitted, defaults to ''none'''
                      type: string
            agent:
              type: object
              properties:
                language:
                  description: Agent language
                  type: string
                  default: en
                  enum:
                    - en
                    - es
                context:
                  description: Conversation context including the history of messages and function calls
                  type: object
                  properties:
                    messages:
                      description: Conversation history as a list of messages and function calls
                      type: array
                      items:
                        type: object
                        description: A message here is either a conversational message or a function call
                        oneOf:
                          - type: object
                            description: Conversation text as part of the conversation history
                            required:
                              - type
                              - role
                              - content
                            properties:
                              type:
                                description: Message type identifier for conversation text
                                type: string
                                const: History
                              role:
                                description: Identifies who spoke the statement
                                type: string
                                enum:
                                  - user
                                  - assistant
                              content:
                                description: The actual statement that was spoken
                                type: string
                          - type: object
                            description: Client-side or server-side function call request and response as part of the conversation history
                            required:
                              - type
                              - function_calls
                            properties:
                              type:
                                type: string
                                const: History
                              function_calls:
                                description: List of function call objects
                                type: array
                                items:
                                  type: object
                                  required:
                                    - id
                                    - name
                                    - client_side
                                    - arguments
                                    - response
                                  properties:
                                    id:
                                      description: Unique identifier for the function call
                                      type: string
                                    name:
                                      description: Name of the function called
                                      type: string
                                    client_side:
                                      description: Indicates if the call was client-side or server-side
                                      type: boolean
                                    arguments:
                                      description: Arguments passed to the function
                                      type: string
                                    response:
                                      description: Response from the function call
                                      type: string
                listen:
                  type: object
                  properties:
                    provider:
                      type: object
                      properties:
                        type:
                          description: Provider type for speech-to-text
                          type: string
                          enum:
                            - deepgram
                        model:
                          description: Model to use for speech to text
                          type: string
                        keyterms:
                          description: Prompt key-term recognition (nova-3 'en' only)
                          type: array
                          items:
                            type: string
                        smart_format:
                          description: Applies smart formatting to improve transcript readability (Deepgram providers only)
                          type: boolean
                          default: false
                      required:
                        - type
                think:
                  type: object
                  properties:
                    provider:
                      type: object
                      oneOf:
                        - properties:
                            type:
                              enum:
                                - open_ai
                            model:
                              description: OpenAI model to use
                              type: string
                              enum:
                                - gpt-5
                                - gpt-5-mini
                                - gpt-5-nano
                                - gpt-4.1
                                - gpt-4.1-mini
                                - gpt-4.1-nano
                                - gpt-4o
                                - gpt-4o-mini
                            temperature:
                              description: OpenAI temperature (0-2)
                              type: number
                              maximum: 2
                              minimum: 0
                        - properties:
                            type:
                              enum:
                                - aws_bedrock
                            model:
                              description: AWS Bedrock model to use
                              type: string
                              enum:
                                - 'anthropic/claude-3-5-sonnet-20240620-v1:0'
                                - 'anthropic/claude-3-5-haiku-20240307-v1:0'
                            temperature:
                              description: AWS Bedrock temperature (0-2)
                              type: number
                              maximum: 2
                              minimum: 0
                            credentials:
                              description: AWS credentials type (STS short-lived or IAM long-lived)
                              type: object
                              properties:
                                type:
                                  description: AWS credentials type (STS short-lived or IAM long-lived)
                                  type: string
                                  enum:
                                    - sts
                                    - iam
                                region:
                                  description: AWS region
                                  type: string
                                access_key_id:
                                  description: AWS access key
                                  type: string
                                secret_access_key:
                                  description: AWS secret access key
                                  type: string
                                session_token:
                                  description: AWS session token (required for STS only)
                                  type: string
                        - properties:
                            type:
                              enum:
                                - anthropic
                            model:
                              description: Anthropic model to use
                              type: string
                              enum:
                                - claude-3-5-haiku-latest
                                - claude-sonnet-4-20250514
                            temperature:
                              description: Anthropic temperature (0-1)
                              type: number
                              maximum: 1
                              minimum: 0
                        - properties:
                            type:
                              enum:
                                - google
                            model:
                              description: Google model to use
                              type: string
                              enum:
                                - gemini-2.0-flash
                                - gemini-2.0-flash-lite
                                - gemini-2.5-flash
                            temperature:
                              description: Google temperature (0-2)
                              type: number
                              maximum: 2
                              minimum: 0
                        - properties:
                            type:
                              enum:
                                - groq
                            model:
                              description: Groq model to use
                              type: string
                              enum:
                                - openai/gpt-oss-20b
                            temperature:
                              description: Groq temperature (0-2)
                              type: number
                              maximum: 2
                              minimum: 0
                      required:
                        - type
                        - model
                    endpoint:
                      description: |
                        Optional for non-Deepgram LLM providers. When present, must include url field and headers object
                      type: object
                      properties:
                        url:
                          description: Custom LLM endpoint URL
                          type: string
                        headers:
                          description: Custom headers for the endpoint
                          type: object
                          additionalProperties:
                            type: string
                    functions:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            description: Function name
                            type: string
                          description:
                            description: Function description
                            type: string
                          parameters:
                            description: Function parameters
                            type: object
                          endpoint:
                            description: 'The Function endpoint to call. if not passed, function is called client-side'
                            type: object
                            properties:
                              url:
                                description: Endpoint URL
                                type: string
                              method:
                                description: HTTP method
                                type: string
                              headers:
                                type: object
                                additionalProperties:
                                  type: string
                    prompt:
                      type: string
                    context_length:
                      description: |
                        Specifies the number of characters retained in context between user messages, agent responses, and function calls. This setting is only configurable when a custom think endpoint is used
                      oneOf:
                        - title: max
                          description: Agent will not discard context regardless of length
                          type: string
                          enum:
                            - max
                        - type: integer
                          minimum: 2
                  required:
                    - provider
                speak:
                  oneOf:
                    - type: object
                      required:
                        - provider
                      properties:
                        provider:
                          type: object
                          oneOf:
                            - type: object
                              required:
                                - type
                                - model
                              properties:
                                type:
                                  type: string
                                  const: deepgram
                                model:
                                  description: Deepgram TTS model
                                  type: string
                                  enum:
                                    - aura-asteria-en
                                    - aura-luna-en
                                    - aura-stella-en
                                    - aura-athena-en
                                    - aura-hera-en
                                    - aura-orion-en
                                    - aura-arcas-en
                                    - aura-perseus-en
                                    - aura-angus-en
                                    - aura-orpheus-en
                                    - aura-helios-en
                                    - aura-zeus-en
                                    - aura-2-amalthea-en
                                    - aura-2-andromeda-en
                                    - aura-2-apollo-en
                                    - aura-2-arcas-en
                                    - aura-2-aries-en
                                    - aura-2-asteria-en
                                    - aura-2-athena-en
                                    - aura-2-atlas-en
                                    - aura-2-aurora-en
                                    - aura-2-callista-en
                                    - aura-2-cora-en
                                    - aura-2-cordelia-en
                                    - aura-2-delia-en
                                    - aura-2-draco-en
                                    - aura-2-electra-en
                                    - aura-2-harmonia-en
                                    - aura-2-helena-en
                                    - aura-2-hera-en
                                    - aura-2-hermes-en
                                    - aura-2-hyperion-en
                                    - aura-2-iris-en
                                    - aura-2-janus-en
                                    - aura-2-juno-en
                                    - aura-2-jupiter-en
                                    - aura-2-luna-en
                                    - aura-2-mars-en
                                    - aura-2-minerva-en
                                    - aura-2-neptune-en
                                    - aura-2-odysseus-en
                                    - aura-2-ophelia-en
                                    - aura-2-orion-en
                                    - aura-2-orpheus-en
                                    - aura-2-pandora-en
                                    - aura-2-phoebe-en
                                    - aura-2-pluto-en
                                    - aura-2-saturn-en
                                    - aura-2-selene-en
                                    - aura-2-thalia-en
                                    - aura-2-theia-en
                                    - aura-2-vesta-en
                                    - aura-2-zeus-en
                                    - aura-2-sirio-es
                                    - aura-2-nestor-es
                                    - aura-2-carina-es
                                    - aura-2-celeste-es
                                    - aura-2-alvaro-es
                                    - aura-2-diana-es
                                    - aura-2-aquila-es
                                    - aura-2-selena-es
                                    - aura-2-estrella-es
                                    - aura-2-javier-es
                            - type: object
                              required:
                                - type
                                - model_id
                              properties:
                                type:
                                  type: string
                                  const: eleven_labs
                                model_id:
                                  description: Eleven Labs model ID
                                  type: string
                                  enum:
                                    - eleven_turbo_v2_5
                                    - eleven_monolingual_v1
                                    - eleven_multilingual_v2
                                language_code:
                                  description: Eleven Labs optional language code
                                  type: string
                            - type: object
                              required:
                                - type
                                - model_id
                                - voice
                              properties:
                                type:
                                  type: string
                                  const: cartesia
                                model_id:
                                  description: Cartesia model ID
                                  type: string
                                  enum:
                                    - sonic-2
                                    - sonic-multilingual
                                voice:
                                  type: object
                                  properties:
                                    mode:
                                      description: Cartesia voice mode
                                      type: string
                                    id:
                                      description: Cartesia voice ID
                                      type: string
                                  required:
                                    - mode
                                    - id
                                language:
                                  description: Cartesia language code
                                  type: string
                            - type: object
                              required:
                                - type
                                - model
                                - voice
                              properties:
                                type:
                                  type: string
                                  const: open_ai
                                model:
                                  description: OpenAI TTS model
                                  type: string
                                  enum:
                                    - tts-1
                                    - tts-1-hd
                                voice:
                                  description: OpenAI voice
                                  type: string
                                  enum:
                                    - alloy
                                    - echo
                                    - fable
                                    - onyx
                                    - nova
                                    - shimmer
                            - type: object
                              required:
                                - type
                                - voice
                                - language_code
                                - engine
                                - credentials
                              properties:
                                type:
                                  type: string
                                  const: aws_polly
                                voice:
                                  description: AWS Polly voice name
                                  type: string
                                  enum:
                                    - Matthew
                                    - Joanna
                                    - Amy
                                    - Emma
                                    - Brian
                                    - Arthur
                                    - Aria
                                    - Ayanda
                                language_code:
                                  description: 'Language code (e.g., "en-US")'
                                  type: string
                                engine:
                                  type: string
                                  enum:
                                    - generative
                                    - long-form
                                    - standard
                                    - neural
                                credentials:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - sts
                                        - iam
                                    region:
                                      type: string
                                    access_key_id:
                                      type: string
                                    secret_access_key:
                                      type: string
                                    session_token:
                                      description: Required for STS only
                                      type: string
                                  required:
                                    - type
                                    - region
                                    - access_key_id
                                    - secret_access_key
                        endpoint:
                          description: |
                            Optional if provider is Deepgram. Required for non-Deepgram TTS providers.
                            When present, must include url field and headers object. Valid schemes are https and wss with wss only supported for Eleven Labs.
                          type: object
                          properties:
                            url:
                              description: |
                                Custom TTS endpoint URL. Cannot contain `output_format` or `model_id` query
                                parameters when the provider is Eleven Labs.
                              type: string
                            headers:
                              type: object
                              additionalProperties:
                                type: string
                    - type: array
                      items:
                        type: object
                        required:
                          - provider
                        properties:
                          provider:
                            type: object
                            oneOf:
                              - type: object
                                required:
                                  - type
                                  - model
                                properties:
                                  type:
                                    type: string
                                    const: deepgram
                                  model:
                                    description: Deepgram TTS model
                                    type: string
                                    enum:
                                      - aura-asteria-en
                                      - aura-luna-en
                                      - aura-stella-en
                                      - aura-athena-en
                                      - aura-hera-en
                                      - aura-orion-en
                                      - aura-arcas-en
                                      - aura-perseus-en
                                      - aura-angus-en
                                      - aura-orpheus-en
                                      - aura-helios-en
                                      - aura-zeus-en
                                      - aura-2-amalthea-en
                                      - aura-2-andromeda-en
                                      - aura-2-apollo-en
                                      - aura-2-arcas-en
                                      - aura-2-aries-en
                                      - aura-2-asteria-en
                                      - aura-2-athena-en
                                      - aura-2-atlas-en
                                      - aura-2-aurora-en
                                      - aura-2-callista-en
                                      - aura-2-cora-en
                                      - aura-2-cordelia-en
                                      - aura-2-delia-en
                                      - aura-2-draco-en
                                      - aura-2-electra-en
                                      - aura-2-harmonia-en
                                      - aura-2-helena-en
                                      - aura-2-hera-en
                                      - aura-2-hermes-en
                                      - aura-2-hyperion-en
                                      - aura-2-iris-en
                                      - aura-2-janus-en
                                      - aura-2-juno-en
                                      - aura-2-jupiter-en
                                      - aura-2-luna-en
                                      - aura-2-mars-en
                                      - aura-2-minerva-en
                                      - aura-2-neptune-en
                                      - aura-2-odysseus-en
                                      - aura-2-ophelia-en
                                      - aura-2-orion-en
                                      - aura-2-orpheus-en
                                      - aura-2-pandora-en
                                      - aura-2-phoebe-en
                                      - aura-2-pluto-en
                                      - aura-2-saturn-en
                                      - aura-2-selene-en
                                      - aura-2-thalia-en
                                      - aura-2-theia-en
                                      - aura-2-vesta-en
                                      - aura-2-zeus-en
                                      - aura-2-sirio-es
                                      - aura-2-nestor-es
                                      - aura-2-carina-es
                                      - aura-2-celeste-es
                                      - aura-2-alvaro-es
                                      - aura-2-diana-es
                                      - aura-2-aquila-es
                                      - aura-2-selena-es
                                      - aura-2-estrella-es
                                      - aura-2-javier-es
                              - type: object
                                required:
                                  - type
                                  - model_id
                                properties:
                                  type:
                                    type: string
                                    const: eleven_labs
                                  model_id:
                                    description: Eleven Labs model ID
                                    type: string
                                    enum:
                                      - eleven_turbo_v2_5
                                      - eleven_monolingual_v1
                                      - eleven_multilingual_v2
                                  language_code:
                                    description: Eleven Labs optional language code
                                    type: string
                              - type: object
                                required:
                                  - type
                                  - model_id
                                  - voice
                                properties:
                                  type:
                                    type: string
                                    const: cartesia
                                  model_id:
                                    description: Cartesia model ID
                                    type: string
                                    enum:
                                      - sonic-2
                                      - sonic-multilingual
                                  voice:
                                    type: object
                                    properties:
                                      mode:
                                        description: Cartesia voice mode
                                        type: string
                                      id:
                                        description: Cartesia voice ID
                                        type: string
                                    required:
                                      - mode
                                      - id
                                  language:
                                    description: Cartesia language code
                                    type: string
                              - type: object
                                required:
                                  - type
                                  - model
                                  - voice
                                properties:
                                  type:
                                    type: string
                                    const: open_ai
                                  model:
                                    description: OpenAI TTS model
                                    type: string
                                    enum:
                                      - tts-1
                                      - tts-1-hd
                                  voice:
                                    description: OpenAI voice
                                    type: string
                                    enum:
                                      - alloy
                                      - echo
                                      - fable
                                      - onyx
                                      - nova
                                      - shimmer
                              - type: object
                                required:
                                  - type
                                  - voice
                                  - language_code
                                  - engine
                                  - credentials
                                properties:
                                  type:
                                    type: string
                                    const: aws_polly
                                  voice:
                                    description: AWS Polly voice name
                                    type: string
                                    enum:
                                      - Matthew
                                      - Joanna
                                      - Amy
                                      - Emma
                                      - Brian
                                      - Arthur
                                      - Aria
                                      - Ayanda
                                  language_code:
                                    description: 'Language code (e.g., "en-US")'
                                    type: string
                                  engine:
                                    type: string
                                    enum:
                                      - generative
                                      - long-form
                                      - standard
                                      - neural
                                  credentials:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        enum:
                                          - sts
                                          - iam
                                      region:
                                        type: string
                                      access_key_id:
                                        type: string
                                      secret_access_key:
                                        type: string
                                      session_token:
                                        description: Required for STS only
                                        type: string
                                    required:
                                      - type
                                      - region
                                      - access_key_id
                                      - secret_access_key
                          endpoint:
                            description: |
                              Optional if provider is Deepgram. Required for non-Deepgram TTS providers.
                              When present, must include url field and headers object. Valid schemes are https and wss with wss only supported for Eleven Labs.
                            type: object
                            properties:
                              url:
                                description: |
                                  Custom TTS endpoint URL. Cannot contain `output_format` or `model_id` query
                                  parameters when the provider is Eleven Labs.
                                type: string
                              headers:
                                type: object
                                additionalProperties:
                                  type: string
                greeting:
                  description: Optional message that agent will speak at the start
                  type: string
          required:
            - type
            - audio
            - agent
      AgentV1UpdateSpeak:
        description: Send a message to change the Speak model in the middle of a conversation
        payload:
          type: object
          properties:
            type:
              description: Message type identifier for updating the speak model
              type: string
              const: UpdateSpeak
            speak:
              description: 'Configuration for the speak model. Optional, defaults to latest deepgram TTS model'
              type: object
              properties:
                provider:
                  type: object
                  oneOf:
                    - type: object
                      required:
                        - type
                        - model
                      properties:
                        type:
                          type: string
                          const: deepgram
                        model:
                          description: Deepgram TTS model
                          type: string
                          enum:
                            - aura-asteria-en
                            - aura-luna-en
                            - aura-stella-en
                            - aura-athena-en
                            - aura-hera-en
                            - aura-orion-en
                            - aura-arcas-en
                            - aura-perseus-en
                            - aura-angus-en
                            - aura-orpheus-en
                            - aura-helios-en
                            - aura-zeus-en
                            - aura-2-amalthea-en
                            - aura-2-andromeda-en
                            - aura-2-apollo-en
                            - aura-2-arcas-en
                            - aura-2-aries-en
                            - aura-2-asteria-en
                            - aura-2-athena-en
                            - aura-2-atlas-en
                            - aura-2-aurora-en
                            - aura-2-callista-en
                            - aura-2-cora-en
                            - aura-2-cordelia-en
                            - aura-2-delia-en
                            - aura-2-draco-en
                            - aura-2-electra-en
                            - aura-2-harmonia-en
                            - aura-2-helena-en
                            - aura-2-hera-en
                            - aura-2-hermes-en
                            - aura-2-hyperion-en
                            - aura-2-iris-en
                            - aura-2-janus-en
                            - aura-2-juno-en
                            - aura-2-jupiter-en
                            - aura-2-luna-en
                            - aura-2-mars-en
                            - aura-2-minerva-en
                            - aura-2-neptune-en
                            - aura-2-odysseus-en
                            - aura-2-ophelia-en
                            - aura-2-orion-en
                            - aura-2-orpheus-en
                            - aura-2-pandora-en
                            - aura-2-phoebe-en
                            - aura-2-pluto-en
                            - aura-2-saturn-en
                            - aura-2-selene-en
                            - aura-2-thalia-en
                            - aura-2-theia-en
                            - aura-2-vesta-en
                            - aura-2-zeus-en
                            - aura-2-sirio-es
                            - aura-2-nestor-es
                            - aura-2-carina-es
                            - aura-2-celeste-es
                            - aura-2-alvaro-es
                            - aura-2-diana-es
                            - aura-2-aquila-es
                            - aura-2-selena-es
                            - aura-2-estrella-es
                            - aura-2-javier-es
                    - type: object
                      required:
                        - type
                        - model_id
                      properties:
                        type:
                          type: string
                          const: eleven_labs
                        model_id:
                          description: Eleven Labs model ID
                          type: string
                          enum:
                            - eleven_turbo_v2_5
                            - eleven_monolingual_v1
                            - eleven_multilingual_v2
                        language_code:
                          description: Eleven Labs optional language code
                          type: string
                    - type: object
                      required:
                        - type
                        - model_id
                        - voice
                      properties:
                        type:
                          type: string
                          const: cartesia
                        model_id:
                          description: Cartesia model ID
                          type: string
                          enum:
                            - sonic-2
                            - sonic-multilingual
                        voice:
                          type: object
                          properties:
                            mode:
                              description: Cartesia voice mode
                              type: string
                            id:
                              description: Cartesia voice ID
                              type: string
                          required:
                            - mode
                            - id
                        language:
                          description: Cartesia language code
                          type: string
                    - type: object
                      required:
                        - type
                        - model
                        - voice
                      properties:
                        type:
                          type: string
                          const: open_ai
                        model:
                          description: OpenAI TTS model
                          type: string
                          enum:
                            - tts-1
                            - tts-1-hd
                        voice:
                          description: OpenAI voice
                          type: string
                          enum:
                            - alloy
                            - echo
                            - fable
                            - onyx
                            - nova
                            - shimmer
                    - type: object
                      required:
                        - type
                        - voice
                        - language_code
                        - engine
                        - credentials
                      properties:
                        type:
                          type: string
                          const: aws_polly
                        voice:
                          description: AWS Polly voice name
                          type: string
                          enum:
                            - Matthew
                            - Joanna
                            - Amy
                            - Emma
                            - Brian
                            - Arthur
                            - Aria
                            - Ayanda
                        language_code:
                          description: 'Language code (e.g., "en-US")'
                          type: string
                        engine:
                          type: string
                          enum:
                            - generative
                            - long-form
                            - standard
                            - neural
                        credentials:
                          type: object
                          properties:
                            type:
                              type: string
                              enum:
                                - sts
                                - iam
                            region:
                              type: string
                            access_key_id:
                              type: string
                            secret_access_key:
                              type: string
                            session_token:
                              description: Required for STS only
                              type: string
                          required:
                            - type
                            - region
                            - access_key_id
                            - secret_access_key
                  required:
                    - type
                endpoint:
                  description: |
                    Optional if provider is Deepgram. Required for non-Deepgram TTS providers.
                    When present, must include url field and headers object. Valid schemes are https and wss with wss only supported for Eleven Labs.
                  type: object
                  properties:
                    url:
                      description: |
                        Custom TTS endpoint URL. Cannot contain `output_format` or `model_id` query
                        parameters when the provider is Eleven Labs.
                      type: string
                    headers:
                      type: object
                      additionalProperties:
                        type: string
              required:
                - provider
          required:
            - type
            - speak
      AgentV1InjectUserMessage:
        description: Send a text based message to the agent
        payload:
          type: object
          properties:
            type:
              description: Message type identifier for injecting a user message
              type: string
              const: InjectUserMessage
            content:
              description: The specific phrase or statement the agent should respond to
              type: string
          required:
            - type
            - content
      AgentV1InjectAgentMessage:
        description: Immediately trigger an agent response during a conversation
        payload:
          type: object
          properties:
            type:
              description: Message type identifier for injecting an agent message
              type: string
              const: InjectAgentMessage
            message:
              description: The statement that the agent should say
              type: string
          required:
            - type
            - message
      AgentV1SendFunctionCallResponse:
        payload:
          type: object
          description: |
            Function call response message used bidirectionally:

            • **Client → Server**: Response after client executes a function 
              marked as client_side: true
            • **Server → Client**: Response after server executes a function 
              marked as client_side: false

            The same message structure serves both directions, enabling a unified
            interface for function call responses regardless of execution location.
          properties:
            type:
              description: Message type identifier for function call responses
              type: string
              const: FunctionCallResponse
            id:
              description: |
                The unique identifier for the function call. 

                • **Required for client responses**: Should match the id from 
                  the corresponding `FunctionCallRequest`
                • **Optional for server responses**: Server may omit when responding 
                  to internal function executions
              type: string
            name:
              description: The name of the function being called
              type: string
            content:
              description: The content or result of the function call
              type: string
          required:
            - type
            - name
            - content
          examples:
            - name: Client-side function response
              summary: Client responding after executing a weather lookup function
              payload:
                type: FunctionCallResponse
                id: func_12345
                name: get_weather
                content: '{"temperature": 72, "condition": "sunny"}'
            - name: Server-side function response
              summary: Server responding after executing an internal database query
              payload:
                type: FunctionCallResponse
                name: query_database
                content: '{"results": [{"id": 1, "name": "example"}]}'
      AgentV1ReceiveFunctionCallResponse:
        $ref: '#/channels/AgentV1/messages/AgentV1SendFunctionCallResponse'
      AgentV1KeepAlive:
        description: Send a control message to the agent
        payload:
          type: object
          description: Send a control message to the agent
          properties:
            type:
              description: Message type identifier
              type: string
              enum:
                - KeepAlive
          required:
            - type
      AgentV1UpdatePrompt:
        description: Send a message to update the system prompt of the agent
        payload:
          type: object
          properties:
            type:
              description: Message type identifier for prompt update request
              type: string
              const: UpdatePrompt
            prompt:
              description: The new system prompt to be used by the agent
              type: string
          required:
            - type
            - prompt
operations:
  SpeakV1Text:
    description: Text to convert to audio
    action: send
    channel:
      $ref: '#/channels/SpeakV1'
    traits:
      - $ref: '#/components/operationTraits/V1AuthTrait'
    messages:
      - $ref: '#/channels/SpeakV1/messages/SpeakV1Text'
  SpeakV1Flush:
    description: Flush the buffer and receive the final audio for text sent so far
    action: send
    channel:
      $ref: '#/channels/SpeakV1'
    traits:
      - $ref: '#/components/operationTraits/V1AuthTrait'
    messages:
      - $ref: '#/channels/SpeakV1/messages/SpeakV1Flush'
  SpeakV1Clear:
    description: Clear the buffer and start a new audio generation. Potentially destructive operation for any text in the buffer
    action: send
    channel:
      $ref: '#/channels/SpeakV1'
    traits:
      - $ref: '#/components/operationTraits/V1AuthTrait'
    messages:
      - $ref: '#/channels/SpeakV1/messages/SpeakV1Flush'
  SpeakV1Close:
    description: Flush the buffer and close the connection gracefully after all audio is generated
    action: send
    channel:
      $ref: '#/channels/SpeakV1'
    traits:
      - $ref: '#/components/operationTraits/V1AuthTrait'
    messages:
      - $ref: '#/channels/SpeakV1/messages/SpeakV1Flush'
  SpeakV1Audio:
    description: Receive audio chunks as they are generated
    action: receive
    channel:
      $ref: '#/channels/SpeakV1'
    traits:
      - $ref: '#/components/operationTraits/V1AuthTrait'
    messages:
      - $ref: '#/channels/SpeakV1/messages/SpeakV1Audio'
  SpeakV1Metadata:
    description: Receive metadata about the audio generation
    action: receive
    channel:
      $ref: '#/channels/SpeakV1'
    traits:
      - $ref: '#/components/operationTraits/V1AuthTrait'
    messages:
      - $ref: '#/channels/SpeakV1/messages/SpeakV1Metadata'
  SpeakV1Flushed:
    description: Receive metadata about the audio generation
    action: receive
    channel:
      $ref: '#/channels/SpeakV1'
    traits:
      - $ref: '#/components/operationTraits/V1AuthTrait'
    messages:
      - $ref: '#/channels/SpeakV1/messages/SpeakV1Flushed'
  SpeakV1Cleared:
    description: Receive metadata about the audio generation
    action: receive
    channel:
      $ref: '#/channels/SpeakV1'
    traits:
      - $ref: '#/components/operationTraits/V1AuthTrait'
    messages:
      - $ref: '#/channels/SpeakV1/messages/SpeakV1Flushed'
  SpeakV1Warning:
    description: Receive a warning about the audio generation
    action: receive
    channel:
      $ref: '#/channels/SpeakV1'
    traits:
      - $ref: '#/components/operationTraits/V1AuthTrait'
    messages:
      - $ref: '#/channels/SpeakV1/messages/SpeakV1Warning'
  ListenV1Media:
    description: Send audio or video data to be transcribed
    action: send
    channel:
      $ref: '#/channels/ListenV1'
    traits:
      - $ref: '#/components/operationTraits/V1AuthTrait'
    messages:
      - $ref: '#/channels/ListenV1/messages/ListenV1Media'
  ListenV1Finalize:
    description: Send a Finalize message to flush the WebSocket stream
    action: send
    channel:
      $ref: '#/channels/ListenV1'
    traits:
      - $ref: '#/components/operationTraits/V1AuthTrait'
    messages:
      - $ref: '#/channels/ListenV1/messages/ListenV1Finalize'
  ListenV1CloseStream:
    description: Send a CloseStream message to close the WebSocket stream
    action: send
    channel:
      $ref: '#/channels/ListenV1'
    traits:
      - $ref: '#/components/operationTraits/V1AuthTrait'
    messages:
      - $ref: '#/channels/ListenV1/messages/ListenV1Finalize'
  ListenV1KeepAlive:
    description: Send a KeepAlive message to keep the WebSocket stream alive
    action: send
    channel:
      $ref: '#/channels/ListenV1'
    traits:
      - $ref: '#/components/operationTraits/V1AuthTrait'
    messages:
      - $ref: '#/channels/ListenV1/messages/ListenV1Finalize'
  ListenV1Results:
    description: Receive transcription results
    action: receive
    channel:
      $ref: '#/channels/ListenV1'
    traits:
      - $ref: '#/components/operationTraits/V1AuthTrait'
    messages:
      - $ref: '#/channels/ListenV1/messages/ListenV1Results'
  ListenV1Metadata:
    description: Receive metadata about the transcription
    action: receive
    channel:
      $ref: '#/channels/ListenV1'
    traits:
      - $ref: '#/components/operationTraits/V1AuthTrait'
    messages:
      - $ref: '#/channels/ListenV1/messages/ListenV1Metadata'
  ListenV1UtteranceEnd:
    description: Receive an utterance end event
    action: receive
    channel:
      $ref: '#/channels/ListenV1'
    traits:
      - $ref: '#/components/operationTraits/V1AuthTrait'
    messages:
      - $ref: '#/channels/ListenV1/messages/ListenV1UtteranceEnd'
  ListenV1SpeechStarted:
    description: Receive a speech started event
    action: receive
    channel:
      $ref: '#/channels/ListenV1'
    traits:
      - $ref: '#/components/operationTraits/V1AuthTrait'
    messages:
      - $ref: '#/channels/ListenV1/messages/ListenV1SpeechStarted'
  ListenV2Media:
    description: Send audio or video data to be transcribed
    action: send
    channel:
      $ref: '#/channels/ListenV2'
    traits:
      - $ref: '#/components/operationTraits/V2AuthTrait'
    messages:
      - $ref: '#/channels/ListenV2/messages/ListenV2Media'
  ListenV2CloseStream:
    description: Send a CloseStream message to close the WebSocket stream
    action: send
    channel:
      $ref: '#/channels/ListenV2'
    traits:
      - $ref: '#/components/operationTraits/V2AuthTrait'
    messages:
      - $ref: '#/channels/ListenV2/messages/ListenV2CloseStream'
  ListenV2Connected:
    description: Receive a connected message
    action: receive
    channel:
      $ref: '#/channels/ListenV2'
    traits:
      - $ref: '#/components/operationTraits/V2AuthTrait'
    messages:
      - $ref: '#/channels/ListenV2/messages/ListenV2Connected'
  ListenV2TurnInfo:
    description: Receive a turn info message
    action: receive
    channel:
      $ref: '#/channels/ListenV2'
    traits:
      - $ref: '#/components/operationTraits/V2AuthTrait'
    messages:
      - $ref: '#/channels/ListenV2/messages/ListenV2TurnInfo'
  ListenV2FatalError:
    description: Receive a fatal error message
    action: receive
    channel:
      $ref: '#/channels/ListenV2'
    traits:
      - $ref: '#/components/operationTraits/V2AuthTrait'
    messages:
      - $ref: '#/channels/ListenV2/messages/ListenV2FatalError'
  AgentV1Settings:
    description: Send settings configuration to Deepgram's Voice Agent API
    action: send
    channel:
      $ref: '#/channels/AgentV1'
    traits:
      - $ref: '#/components/operationTraits/V1AuthTrait'
    messages:
      - $ref: '#/channels/AgentV1/messages/AgentV1Settings'
  AgentV1UpdateSpeak:
    description: Send update speak to Deepgram's Voice Agent API
    action: send
    channel:
      $ref: '#/channels/AgentV1'
    traits:
      - $ref: '#/components/operationTraits/V1AuthTrait'
    messages:
      - $ref: '#/channels/AgentV1/messages/AgentV1UpdateSpeak'
  AgentV1InjectUserMessage:
    action: send
    description: Send inject user message to Deepgram's Voice Agent API
    channel:
      $ref: '#/channels/AgentV1'
    traits:
      - $ref: '#/components/operationTraits/V1AuthTrait'
    messages:
      - $ref: '#/channels/AgentV1/messages/AgentV1InjectUserMessage'
  AgentV1InjectAgentMessage:
    action: send
    description: Send inject agent message to Deepgram's Voice Agent API
    channel:
      $ref: '#/channels/AgentV1'
    traits:
      - $ref: '#/components/operationTraits/V1AuthTrait'
    messages:
      - $ref: '#/channels/AgentV1/messages/AgentV1InjectAgentMessage'
  AgentV1SendFunctionCallResponse:
    description: |
      Send a function call response from the client to the server after
      executing a client-side function call. This is used when the server
      requests execution of a function marked with `client_side: true`.
    action: send
    channel:
      $ref: '#/channels/AgentV1'
    traits:
      - $ref: '#/components/operationTraits/V1AuthTrait'
    messages:
      - $ref: '#/channels/AgentV1/messages/AgentV1SendFunctionCallResponse'
  AgentV1ReceiveFunctionCallResponse:
    description: |
      Receive a function call response from the server after the server
      has executed a server-side function call internally. This occurs
      when functions are marked with `client_side: false`.
    action: receive
    channel:
      $ref: '#/channels/AgentV1'
    traits:
      - $ref: '#/components/operationTraits/V1AuthTrait'
    messages:
      - $ref: '#/channels/AgentV1/messages/AgentV1SendFunctionCallResponse'
  AgentV1KeepAlive:
    description: Send keep alive to Deepgram's Voice Agent API
    action: send
    channel:
      $ref: '#/channels/AgentV1'
    traits:
      - $ref: '#/components/operationTraits/V1AuthTrait'
    messages:
      - $ref: '#/channels/AgentV1/messages/AgentV1KeepAlive'
  AgentV1UpdatePrompt:
    description: Send a prompt update to Deepgram's Voice Agent API
    action: send
    channel:
      $ref: '#/channels/AgentV1'
    traits:
      - $ref: '#/components/operationTraits/V1AuthTrait'
    messages:
      - $ref: '#/channels/AgentV1/messages/AgentV1UpdatePrompt'
  AgentV1PromptUpdated:
    description: Receive prompt update from Deepgram's Voice Agent API
    action: receive
    channel:
      $ref: '#/channels/AgentV1'
    traits:
      - $ref: '#/components/operationTraits/V1AuthTrait'
    messages:
      - $ref: '#/channels/AgentV1/messages/AgentV1PromptUpdated'
  AgentV1SpeakUpdated:
    description: Receive speak update from Deepgram's Voice Agent API
    action: receive
    channel:
      $ref: '#/channels/AgentV1'
    traits:
      - $ref: '#/components/operationTraits/V1AuthTrait'
    messages:
      - $ref: '#/channels/AgentV1/messages/AgentV1SpeakUpdated'
  AgentV1InjectionRefused:
    description: Receive injection refused message from Deepgram's Voice Agent API
    action: receive
    channel:
      $ref: '#/channels/AgentV1'
    traits:
      - $ref: '#/components/operationTraits/V1AuthTrait'
    messages:
      - $ref: '#/channels/AgentV1/messages/AgentV1InjectionRefused'
  AgentV1Welcome:
    description: Receive welcome message from Deepgram's Voice Agent API
    action: receive
    channel:
      $ref: '#/channels/AgentV1'
    traits:
      - $ref: '#/components/operationTraits/V1AuthTrait'
    messages:
      - $ref: '#/channels/AgentV1/messages/AgentV1Welcome'
  AgentV1SettingsApplied:
    description: Receive settings applied message from Deepgram's Voice Agent API
    action: receive
    channel:
      $ref: '#/channels/AgentV1'
    traits:
      - $ref: '#/components/operationTraits/V1AuthTrait'
    messages:
      - $ref: '#/channels/AgentV1/messages/AgentV1SettingsApplied'
  AgentV1ConversationText:
    description: Receive conversation text from Deepgram's Voice Agent API
    action: receive
    channel:
      $ref: '#/channels/AgentV1'
    traits:
      - $ref: '#/components/operationTraits/V1AuthTrait'
    messages:
      - $ref: '#/channels/AgentV1/messages/AgentV1ConversationText'
  AgentV1UserStartedSpeaking:
    description: Receive user started speaking message from Deepgram's Voice Agent API
    action: receive
    channel:
      $ref: '#/channels/AgentV1'
    traits:
      - $ref: '#/components/operationTraits/V1AuthTrait'
    messages:
      - $ref: '#/channels/AgentV1/messages/AgentV1UserStartedSpeaking'
  AgentV1AgentThinking:
    description: Receive agent thinking message from Deepgram's Voice Agent API
    action: receive
    channel:
      $ref: '#/channels/AgentV1'
    traits:
      - $ref: '#/components/operationTraits/V1AuthTrait'
    messages:
      - $ref: '#/channels/AgentV1/messages/AgentV1AgentThinking'
  AgentV1FunctionCallRequest:
    description: Receive function call request from Deepgram's Voice Agent API
    action: receive
    channel:
      $ref: '#/channels/AgentV1'
    traits:
      - $ref: '#/components/operationTraits/V1AuthTrait'
    messages:
      - $ref: '#/channels/AgentV1/messages/AgentV1FunctionCallRequest'
  AgentV1AgentStartedSpeaking:
    description: Receive agent started speaking message from Deepgram's Voice Agent API
    action: receive
    channel:
      $ref: '#/channels/AgentV1'
    traits:
      - $ref: '#/components/operationTraits/V1AuthTrait'
    messages:
      - $ref: '#/channels/AgentV1/messages/AgentV1AgentStartedSpeaking'
  AgentV1AgentAudioDone:
    description: Receive agent audio done message from Deepgram's Voice Agent API
    action: receive
    channel:
      $ref: '#/channels/AgentV1'
    traits:
      - $ref: '#/components/operationTraits/V1AuthTrait'
    messages:
      - $ref: '#/channels/AgentV1/messages/AgentV1AgentAudioDone'
  AgentV1Error:
    description: Receive error response from Deepgram's Voice Agent API
    action: receive
    channel:
      $ref: '#/channels/AgentV1'
    traits:
      - $ref: '#/components/operationTraits/V1AuthTrait'
    messages:
      - $ref: '#/channels/AgentV1/messages/AgentV1Error'
  AgentV1Warning:
    description: Receive warning messages from Deepgram's Voice Agent API
    action: receive
    channel:
      $ref: '#/channels/AgentV1'
    traits:
      - $ref: '#/components/operationTraits/V1AuthTrait'
    messages:
      - $ref: '#/channels/AgentV1/messages/AgentV1Warning'
  AgentV1Media:
    description: Send raw binary audio data to Deepgram's Voice Agent API for processing
    action: send
    channel:
      $ref: '#/channels/AgentV1'
    traits:
      - $ref: '#/components/operationTraits/V1AuthTrait'
    messages:
      - $ref: '#/channels/AgentV1/messages/AgentV1Media'
  AgentV1Audio:
    description: Receive raw binary audio data generated by Deepgram's Voice Agent API
    action: receive
    channel:
      $ref: '#/channels/AgentV1'
    traits:
      - $ref: '#/components/operationTraits/V1AuthTrait'
    messages:
      - $ref: '#/channels/AgentV1/messages/AgentV1Audio'
components:
  schemas:
    SpeakV1Encoding:
      $ref: '#/channels/SpeakV1/bindings/ws/query/properties/encoding'
    SpeakV1MipOptOut:
      $ref: '#/channels/SpeakV1/bindings/ws/query/properties/mip_opt_out'
    SpeakV1Model:
      $ref: '#/channels/SpeakV1/bindings/ws/query/properties/model'
    SpeakV1SampleRate:
      $ref: '#/channels/SpeakV1/bindings/ws/query/properties/sample_rate'
    ListenV1Callback:
      $ref: '#/channels/ListenV1/bindings/ws/query/properties/callback'
    ListenV1CallbackMethod:
      $ref: '#/channels/ListenV1/bindings/ws/query/properties/callback_method'
    ListenV1Channels:
      $ref: '#/channels/ListenV1/bindings/ws/query/properties/channels'
    ListenV1Diarize:
      $ref: '#/channels/ListenV1/bindings/ws/query/properties/diarize'
    ListenV1Dictation:
      $ref: '#/channels/ListenV1/bindings/ws/query/properties/dictation'
    ListenV1Encoding:
      $ref: '#/channels/ListenV1/bindings/ws/query/properties/encoding'
    ListenV1Endpointing:
      $ref: '#/channels/ListenV1/bindings/ws/query/properties/endpointing'
    ListenV1Extra:
      $ref: '#/channels/ListenV1/bindings/ws/query/properties/extra'
    ListenV1FillerWords:
      $ref: '#/channels/ListenV1/bindings/ws/query/properties/filler_words'
    ListenV1InterimResults:
      $ref: '#/channels/ListenV1/bindings/ws/query/properties/interim_results'
    ListenV1Keyterm:
      $ref: '#/channels/ListenV1/bindings/ws/query/properties/keyterm'
    ListenV1Keywords:
      $ref: '#/channels/ListenV1/bindings/ws/query/properties/keywords'
    ListenV1Language:
      $ref: '#/channels/ListenV1/bindings/ws/query/properties/language'
    ListenV1MipOptOut:
      $ref: '#/channels/ListenV1/bindings/ws/query/properties/mip_opt_out'
    ListenV1Model:
      $ref: '#/channels/ListenV1/bindings/ws/query/properties/model'
    ListenV1Multichannel:
      $ref: '#/channels/ListenV1/bindings/ws/query/properties/multichannel'
    ListenV1Numerals:
      $ref: '#/channels/ListenV1/bindings/ws/query/properties/numerals'
    ListenV1ProfanityFilter:
      $ref: '#/channels/ListenV1/bindings/ws/query/properties/profanity_filter'
    ListenV1Punctuate:
      $ref: '#/channels/ListenV1/bindings/ws/query/properties/punctuate'
    ListenV1Redact:
      $ref: '#/channels/ListenV1/bindings/ws/query/properties/redact'
    ListenV1Replace:
      $ref: '#/channels/ListenV1/bindings/ws/query/properties/replace'
    ListenV1SampleRate:
      $ref: '#/channels/ListenV1/bindings/ws/query/properties/sample_rate'
    ListenV1Search:
      $ref: '#/channels/ListenV1/bindings/ws/query/properties/search'
    ListenV1SmartFormat:
      $ref: '#/channels/ListenV1/bindings/ws/query/properties/smart_format'
    ListenV1Tag:
      $ref: '#/channels/ListenV1/bindings/ws/query/properties/tag'
    ListenV1UtteranceEndMs:
      $ref: '#/channels/ListenV1/bindings/ws/query/properties/utterance_end_ms'
    ListenV1VadEvents:
      $ref: '#/channels/ListenV1/bindings/ws/query/properties/vad_events'
    ListenV1Version:
      $ref: '#/channels/ListenV1/bindings/ws/query/properties/version'
    ListenV2Model:
      $ref: '#/channels/ListenV2/bindings/ws/query/properties/model'
    ListenV2Encoding:
      $ref: '#/channels/ListenV2/bindings/ws/query/properties/encoding'
    ListenV2SampleRate:
      $ref: '#/channels/ListenV2/bindings/ws/query/properties/sample_rate'
    ListenV2EagerEotThreshold:
      $ref: '#/channels/ListenV2/bindings/ws/query/properties/eager_eot_threshold'
    ListenV2EotThreshold:
      $ref: '#/channels/ListenV2/bindings/ws/query/properties/eot_threshold'
    ListenV2EotTimeoutMs:
      $ref: '#/channels/ListenV2/bindings/ws/query/properties/eot_timeout_ms'
    ListenV2Keyterm:
      $ref: '#/channels/ListenV2/bindings/ws/query/properties/keyterm'
    ListenV2MipOptOut:
      $ref: '#/channels/ListenV2/bindings/ws/query/properties/mip_opt_out'
    ListenV2Tag:
      $ref: '#/channels/ListenV2/bindings/ws/query/properties/tag'
  messages:
    SpeakV1TextMessage:
      $ref: '#/channels/SpeakV1/messages/SpeakV1Text'
    SpeakV1ControlMessage:
      $ref: '#/channels/SpeakV1/messages/SpeakV1Flush'
    SpeakV1AudioChunkEvent:
      $ref: '#/channels/SpeakV1/messages/SpeakV1Audio'
    SpeakV1MetadataEvent:
      $ref: '#/channels/SpeakV1/messages/SpeakV1Metadata'
    SpeakV1ControlEvent:
      $ref: '#/channels/SpeakV1/messages/SpeakV1Flushed'
    SpeakV1WarningEvent:
      $ref: '#/channels/SpeakV1/messages/SpeakV1Warning'
    ListenV1MediaMessage:
      $ref: '#/channels/ListenV1/messages/ListenV1Media'
    ListenV1ControlMessage:
      $ref: '#/channels/ListenV1/messages/ListenV1Finalize'
    ListenV1ResultsEvent:
      $ref: '#/channels/ListenV1/messages/ListenV1Results'
    ListenV1MetadataEvent:
      $ref: '#/channels/ListenV1/messages/ListenV1Metadata'
    ListenV1UtteranceEndEvent:
      $ref: '#/channels/ListenV1/messages/ListenV1UtteranceEnd'
    ListenV1SpeechStartedEvent:
      $ref: '#/channels/ListenV1/messages/ListenV1SpeechStarted'
    ListenV2MediaMessage:
      $ref: '#/channels/ListenV2/messages/ListenV2Media'
    ListenV2ControlMessage:
      $ref: '#/channels/ListenV2/messages/ListenV2CloseStream'
    ListenV2ConnectedEvent:
      $ref: '#/channels/ListenV2/messages/ListenV2Connected'
    ListenV2TurnInfoEvent:
      $ref: '#/channels/ListenV2/messages/ListenV2TurnInfo'
    ListenV2FatalErrorEvent:
      $ref: '#/channels/ListenV2/messages/ListenV2FatalError'
    AgentV1SettingsMessage:
      $ref: '#/channels/AgentV1/messages/AgentV1Settings'
    AgentV1UpdateSpeakMessage:
      $ref: '#/channels/AgentV1/messages/AgentV1UpdateSpeak'
    AgentV1UpdatePromptMessage:
      $ref: '#/channels/AgentV1/messages/AgentV1UpdatePrompt'
    AgentV1InjectUserMessageMessage:
      $ref: '#/channels/AgentV1/messages/AgentV1InjectUserMessage'
    AgentV1InjectAgentMessageMessage:
      $ref: '#/channels/AgentV1/messages/AgentV1InjectAgentMessage'
    AgentV1InjectionRefusedEvent:
      $ref: '#/channels/AgentV1/messages/AgentV1InjectionRefused'
    AgentV1FunctionCallResponseMessage:
      $ref: '#/channels/AgentV1/messages/AgentV1SendFunctionCallResponse'
    AgentV1ControlMessage:
      $ref: '#/channels/AgentV1/messages/AgentV1KeepAlive'
    AgentV1WelcomeMessage:
      $ref: '#/channels/AgentV1/messages/AgentV1Welcome'
    AgentV1SettingsAppliedEvent:
      $ref: '#/channels/AgentV1/messages/AgentV1SettingsApplied'
    AgentV1ConversationTextEvent:
      $ref: '#/channels/AgentV1/messages/AgentV1ConversationText'
    AgentV1UserStartedSpeakingEvent:
      $ref: '#/channels/AgentV1/messages/AgentV1UserStartedSpeaking'
    AgentV1AgentThinkingEvent:
      $ref: '#/channels/AgentV1/messages/AgentV1AgentThinking'
    AgentV1FunctionCallRequestEvent:
      $ref: '#/channels/AgentV1/messages/AgentV1FunctionCallRequest'
    AgentV1AgentStartedSpeakingEvent:
      $ref: '#/channels/AgentV1/messages/AgentV1AgentStartedSpeaking'
    AgentV1AgentAudioDoneEvent:
      $ref: '#/channels/AgentV1/messages/AgentV1AgentAudioDone'
    AgentV1ErrorEvent:
      $ref: '#/channels/AgentV1/messages/AgentV1Error'
    AgentV1PromptUpdatedEvent:
      $ref: '#/channels/AgentV1/messages/AgentV1PromptUpdated'
    AgentV1SpeakUpdatedEvent:
      $ref: '#/channels/AgentV1/messages/AgentV1SpeakUpdated'
    AgentV1WarningEvent:
      $ref: '#/channels/AgentV1/messages/AgentV1Warning'
    AgentV1MediaMessage:
      $ref: '#/channels/AgentV1/messages/AgentV1Media'
    AgentV1AudioChunkEvent:
      $ref: '#/channels/AgentV1/messages/AgentV1Audio'
  operationTraits:
    V1AuthTrait:
      security:
        - $ref: '#/components/securitySchemes/ApiKeyAuth'
        - $ref: '#/components/securitySchemes/JwtAuth'
    V2AuthTrait:
      security:
        - $ref: '#/components/securitySchemes/ApiKeyAuth'
        - $ref: '#/components/securitySchemes/JwtAuth'
  securitySchemes:
    ApiKeyAuth:
      type: httpApiKey
      in: header
      name: Authorization
      x-fern-header:
        prefix: Token
        env: DEEPGRAM_API_KEY
    JwtAuth:
      type: http
      scheme: bearer
      description: Use a temporary JWT token for authentication. Generate a temporary token using your API key and pass it as a Bearer token.
      x-fern-token:
        name: authToken
        env: DEEPGRAM_TOKEN
