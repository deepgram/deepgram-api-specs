---
outputPattern: {{@pathName}}/{{@methodName}}.md
splitOn: paths
groupBy: method
---
# {{uppercase methodName}} {{pathName}}

{{{description}}}

## Table of Contents

- [Overview](#overview)
- [API Information](#api-information)
- [Authentication](#authentication)
{{#if parameters}}
- [Parameters](#parameters)
{{/if}}
{{#if requestBody}}
- [Request Body](#request-body)
{{/if}}
- [Response](#response)
- [Example Usage](#example-usage)

## Overview

{{{summary}}}

## API Information

- **API**: {{{spec.info.title}}} (v{{spec.info.version}})
- **Operation ID**: `{{operationId}}`
- **Endpoint**: `{{uppercase methodName}} {{pathName}}`

## Authentication
{{#if security}}

Authentication is required for this endpoint:

{{#each security}}
{{#each this}}

### `{{@key}}` Security Scheme

**Type**: {{scheme.type}}{{#if scheme.scheme}} ({{scheme.scheme}}){{/if}}
{{#if scheme.name}}
**Parameter Name**: `{{{scheme.name}}}`
{{/if}}
{{#if scheme.in}}
**Location**: {{scheme.in}}
{{/if}}
{{#if scheme.bearerFormat}}
**Bearer Format**: {{scheme.bearerFormat}}
{{/if}}
{{#if scheme.description}}

**Description**: {{{scheme.description}}}
{{/if}}

**Example Header**:
{{#if (eq scheme.type "apiKey")}}
```
{{{scheme.name}}}: token DEEPGRAM_API_KEY
```
{{/if}}
{{#if (eq scheme.type "http")}}
{{#if (eq scheme.scheme "bearer")}}
```
Authorization: Bearer DEEPGRAM_TOKEN
```
{{/if}}
{{/if}}

{{/each}}
{{/each}}

{{else}}

No authentication is required for this endpoint.
{{/if}}

{{#if parameters}}
## Parameters

| Name | Located In | Required | Type | Description |
|------|------------|:--------:|------|-------------|
{{#each parameters}}
| `{{name}}` | {{in}} | {{#if required}}Yes{{else}}No{{/if}} | {{#if schema.type}}{{schema.type}}{{#if schema.format}}
({{schema.format}}){{/if}}{{else}}object{{/if}} | {{{description}}} |
{{/each}}
{{/if}}

{{#if requestBody}}

## Request Body

{{{requestBody.description}}}

{{#if requestBody.content}}
{{#each requestBody.content}}
### Content Type: `{{{@key}}}`

{{#if (eq @key "application/json")}}
{{#if schema.properties}}
```json
{
{{#each schema.properties}}
  "{{@key}}": {{#if example}}"{{example}}"{{else}}"{{{description}}}"{{/if}}{{#unless @last}},{{/unless}}
{{/each}}
}
```
{{else}}
{{#if schema.example}}
```json
{{schema.example}}
```
{{/if}}
{{/if}}
{{else}}
{{#if (and (eq schema.type "string") (eq schema.format "binary"))}}
Binary data.
{{else}}
{{#if schema.example}}
```
{{schema.example}}
```
{{/if}}
{{/if}}
{{/if}}

{{/each}}
{{/if}}
{{/if}}

## Response

{{#each responses}}
### Status Code: `{{{@key}}}`

{{{description}}}

{{#if content}}
{{#each content}}
#### Content Type: `{{{@key}}}`

{{#if schema}}
{{#if schema.properties}}

**Response Properties:**

| Property | Type | Required | Description |
|----------|------|:--------:|-------------|
{{flattenPropertiesTable schema}}
{{/if}}

**Example Response:**

{{#if (eq @key "application/json")}}
{{#if schema.example}}
```json
{{{json schema.example}}}
```
{{else}}
```json
{{{generateExample schema requiredOnly=true}}}
```
{{/if}}
{{else}}
{{#if (and (eq schema.type "string") (eq schema.format "binary"))}}
Binary data.
{{else}}
{{#if schema.example}}
```
{{{schema.example}}}
```
{{/if}}
{{/if}}
{{/if}}
{{/if}}

{{/each}}
{{/if}}
{{/each}}

---

## Disclaimer: Deepdown

_This file was generated using the experimental [**Deepdown**](https://github.com/deepgram/deepdown). Do not edit this file directly â€” update the template instead._